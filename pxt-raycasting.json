{"README.md":"(Discuss on Makecode Arcade forum at: \n[Raycasting 3D render with directional animation sprites](https://forum.makecode.com/t/raycasting-3d-render-blocks-edition/12921/) )\n\n## Brief:\nAn extension for Makecode Arcade, render a tilemap into 2.5D view, a kind of less calculation consuming 3D perspective view, with directional animations of sprites, \nbased on mmoskal's [3d map](https://forum.makecode.com/t/3d-raycasting-in-arcade/474)\n\n## Quick Start\n* Basically, this render just draw a traditional tilemap game into \"3D view\"\n* setTilemap(), walk around with arrow keys\n* Do your game as usual\n    * sprites, suggest sprite.setScale(0.5) for each, set directional animations with provided animation block.\n    * work together with most of Arcade blocks and extensions, sprite, projectile, overlap,...\n    * except these drawing screen directly, sprite effects ...\n* Operate view pos and collision size with provided \"myself sprite\", and view direction with \"setViewAngle\" block\n* Switch view mode with block \"setViewMode to tilemap(2D)/raycasting(3D)\"\n* Zoom in/out by set fov\n\n## Features:\n* Switch Tilemap(original 2D)/Raycasting(3D by default) view mode with provided \"set mode\" block\n    * The Tilemap mode, basically rendered all stuff via original Arcade functions, so should works as usual\n* Work together with most exsiting Arcade blocks:\n    * Tilemap: Tilemap designer, all blocks: Place sprite on a specific/random tile, ...\n    * Sprite: Manipulate sprite the same way in other tilemap prj before, with almost all blocks:\n        * set image,position,speed, acceleration, scale, kind, follow, detroy, ... \n        * note, one-tile size sprite and wall are disproportionate in 3D view, so suggest shrink to 0.5 or less by setScale(), or set small images for sprites.\n        * except z (diff from 3D world)\n        * except funtions drawing screen directly(effects, say)\n    * Projectile: all, except creating from side(side in 3D is diff from 2D)\n    * Arcade physical engine: wall, bounce, overlap events, ... (see known issues)\n* Predefined \"myself\" Sprite, for physical events in your code, kind=player, camera followed by default. Operate it as of an ordinary sprits, except can't see it in 3D view.\n* Porvide a block for set directional animations of sprite, with the Arcade out-of-box animation editor. Max 4 directions by now, but can be any count, let me know if you need more.\n* Porvide a event handler block running codes when direction between myself and sprite changed, can work together with out-of-box Animation blocks and richard Character Animation extension.\n* FOV(field of view), zoom in/out, by change \"fov\" property value\n* Mimimap, removed, cause we have real-size and real-time tilemap already. Let me know if you need.\n* The offsetZ for sprite, for floating effect, only worked when rendering in 3D view, so collisions could happen even they are far away at Z axis in 3D view\n* Porvide jump/move with height&duration parameters for sprites, calculate velocity and acceleration value auto.\n* Support original Spirte.sayText(), scaled with sprites together\n* Other incompatible: splash/showLongText, they can work, but transparent part is empty, which should be rendered 3D view.\n\n## Known issues:\n* Performing: To compactible with existing blocks, many codes are added in, the perf goes down significantly, need tuning later.\n* The Arcade phyical engine worked fine if sprite image is square. But if not, say a tall tree, collision will occured before hit the wall at y axis. \n    * Reason: The physical engine working in 2D mode, that consider sprite image as its size(x&y direction). But 3D render consider the image width as size for both x & y axises, height as sprite Z-axis size. This could be fix by override the physical engine, in future, if needed.\n\n## Todo:\n* Particles Effects\n* Override physic engine. Any one need?\n* Pose depended animations, stand, walk, attack. Any one need?\n* Perf tuning, Fx8\n* Tutorial\n\n\n----\n> Open this page at [https://aqeeaqee.github.io/pxt-raycasting/](https://aqeeaqee.github.io/pxt-raycasting/)\n\n## Use as Extension\n\nThis repository can be added as an **extension** in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **New Project**\n* click on **Extensions** under the gearwheel menu\n* search for **https://github.com/aqeeaqee/pxt-raycasting** and import\n\n## Edit this project ![Build status badge](https://github.com/aqeeaqee/pxt-raycasting/workflows/MakeCode/badge.svg)\n\nTo edit this repository in MakeCode.\n\n* open [https://arcade.makecode.com/](https://arcade.makecode.com/)\n* click on **Import** then click on **Import URL**\n* paste **https://github.com/aqeeaqee/pxt-raycasting** and click import\n\n## Blocks preview\n\nThis image shows the blocks code from the last commit in master.\nThis image may take a few minutes to refresh.\n\n\\![A rendered view of the blocks](https://github.com/aqeeaqee/pxt-raycasting/raw/master/.github/makecode/blocks.png)\n\n#### Metadata (used for search, rendering)\n\n* for PXT/arcade\n<script src=\"https://makecode.com/gh-pages-embed.js\"></script><script>makeCodeRender(\"{{ site.makecode.home_url }}\", \"{{ site.github.owner_name }}/{{ site.github.repository_name }}\");</script>\n","animation.ts":"//////////////////////// animation.ts contents of previous version, just for test.ts here for convenience /////////////////////\n// file contents:\n// directional animations defines for enging_raycasting.ts\n// for convenience, constructed animations as below, which images are builtin in Arcade, \n// in order from easy to complex\n\n// each are 2D Image array, Image[][]: \n// 1st dimension is direction: \n//    length=1 to any, e.g. 1,2,3,4,...,8,..., engine can automatically arange them to 0~360Â° \n//    order: start from left, then folling with others in CW order\n//    e.g: \n//         2 directions should be [leftAni,RightAni], \n//         4-direction should be [leftAni, frontAni, rightAni, backAni], \n//         8-direction=[l,lf,f,fr,r,rb,b,lb], ...\n//    the reason that directions start from left, is almost all Arcade builtin one side images are facing left, so that would be convient for using.\n// 2nd dimension is animation Images\n//    length=1 to any, e.g. 1,2,3,4,..., engine will automatically loop them by aniInterval(set when create CompactSprite, or use default)\n\n\n//simplest, just one static image, looks the same in all angle of view\nconst texturesDonut = [[sprites.food.smallDonut]]\nconst texturesBigCake = [[sprites.food.bigCake]]\n\n//1-direction, with ani, looks the same Ani in all angle of view\nconst texturesCoin = [[sprites.builtin.coin0, sprites.builtin.coin1, sprites.builtin.coin2, sprites.builtin.coin3, sprites.builtin.coin4, sprites.builtin.coin5]]\n\nconst texturesDog = [[sprites.builtin.dog0, sprites.builtin.dog1, sprites.builtin.dog2]]\nconst texturesDuck = [[sprites.duck.duck1, sprites.duck.duck2, sprites.duck.duck3, sprites.duck.duck4, sprites.duck.duck5, sprites.duck.duck6]]\n\n//2-direction, with ani, looks difference from left or right side\nconst texturesPlane = [[sprites.vehicle.plane0, sprites.vehicle.plane1, sprites.vehicle.plane2, sprites.vehicle.plane3, sprites.vehicle.plane4, sprites.vehicle.plane5],\n[sprites.vehicle.plane0, sprites.vehicle.plane1, sprites.vehicle.plane2, sprites.vehicle.plane3, sprites.vehicle.plane4, sprites.vehicle.plane5]]\n//no right side ani images builtin, so make them from lefts, and then flipX\nimagesFlipX(texturesPlane[1])\n\nconst texturesFish = [[sprites.builtin.angelFish0, sprites.builtin.angelFish1, sprites.builtin.angelFish2, sprites.builtin.angelFish3],\n[sprites.builtin.angelFish0, sprites.builtin.angelFish1, sprites.builtin.angelFish2, sprites.builtin.angelFish3]]\nimagesFlipX(texturesFish[1])\n\n//4-direction\nconst texturesHero = [\n    [sprites.castle.heroWalkSideLeft1, sprites.castle.heroWalkSideLeft2, sprites.castle.heroWalkSideLeft3, sprites.castle.heroWalkSideLeft4],\n    [sprites.castle.heroWalkFront1, sprites.castle.heroWalkFront2, sprites.castle.heroWalkFront3, sprites.castle.heroWalkFront4],\n    [sprites.castle.heroWalkSideRight1, sprites.castle.heroWalkSideRight2, sprites.castle.heroWalkSideRight3, sprites.castle.heroWalkSideRight4],\n    [sprites.castle.heroWalkBack1, sprites.castle.heroWalkBack2, sprites.castle.heroWalkBack3, sprites.castle.heroWalkBack4],\n]\n\nconst texturesPrincess2 = [\n    [sprites.castle.princess2Left1, sprites.castle.princess2Left2],\n    [sprites.castle.princess2WalkFront1, sprites.castle.princess2WalkFront2, sprites.castle.princess2WalkFront3, sprites.castle.princess2WalkFront2],\n    [sprites.castle.princess2Right1, sprites.castle.princess2Right2],\n    [sprites.castle.princess2WalkBack1, sprites.castle.princess2WalkBack2, sprites.castle.princess2WalkBack3, sprites.castle.princess2WalkBack2],\n]\n\n//4-direction, but back side has only 1 image, so no ani when looking from back\nconst texturesSkelly = [\n    [sprites.castle.skellyWalkLeft1, sprites.castle.skellyWalkLeft2],\n    [sprites.castle.skellyWalkFront1, sprites.castle.skellyWalkFront2, sprites.castle.skellyWalkFront3],\n    [sprites.castle.skellyWalkRight1, sprites.castle.skellyWalkRight2],\n    [img`\n\t        ........................\n\t        ........................\n\t        ........................\n\t        ........................\n\t        ..........ffff..........\n\t        ........ff1111ff........\n\t        .......fb111111bf.......\n\t        .......f11111111f.......\n\t        ......fd11111111df......\n\t        ......fd11111111df......\n\t        ......fd11111111df......\n\t        ......fb11111111bf......\n\t        ......fcd111111dcf......\n\t        .......fb111111bf.......\n\t        .....ffffdb1bdcfff......\n\t        ....fc111cfbfbc111cf....\n\t        ....f11111ffff11111f....\n\t        ....fbfbfbffffffbfbf....\n\t        .........ffffff.........\n\t        ..........fff...........\n\t        ........................\n\t        ........................\n\t        ........................\n\t        ........................\n\t    `],\n]\n\nconst texturesPrincess = [\n    [sprites.castle.princessLeft0, sprites.castle.princessLeft1, sprites.castle.princessLeft0, sprites.castle.princessLeft2],\n    [sprites.castle.princessFront0, sprites.castle.princessFront1, sprites.castle.princessFront0, sprites.castle.princessFront2],\n    [],\n    [sprites.castle.princessBack0, sprites.castle.princessBack1, sprites.castle.princessBack0, sprites.castle.princessBack2],\n]\ntexturesPrincess[0].forEach((v, i) => {\n    texturesPrincess[2].push(v.clone())\n    texturesPrincess[2][i].flipX()\n}\n)\n\nfunction imagesFlipX(ani: Image[]) {\n    ani.forEach((img, i) => {\n        ani[i] = img.clone() //don't worry memery leak or waste, cause old images are still using by left\n        ani[i].flipX()\n    })\n}\n\n//////////////////////// end of animation.ts contents of previous version //////////////\n\n","docs/create-animations.md":"# create Animations\n\n * Create a directional image animations, multi animations will applied to one round dirctions averagely, start from the left. \n\n```sig\nRender.createAnimations(100,[sprites.food.smallDonut])\n```\n\n## ~hint\n * The reason that directions start from left, is almost all Arcade out-of-box 1 or 2-dirction images are facing left, so that would be convient for using.\n## ~\n\n## Parameters\n * **frameInterval** the time between changes, eg: 150\n * **frames1** animation, if this is the first of multi animation it will be used as left, others will \n * **frames2** optional, used for 2 or more dirctional\n * **frames3** optional, used for 3 or more dirctional\n * **frames4** optional, used for 4 or more dirctional\n\n## ~hint\n * 4 frames provided, animations would left, front, right, back side in order.\n * 2 frames provided, animations would left, right side in order.\n## ~\n\n\n## Returns\n\n* an Animations object that can be set to [Render.setSpriteAnimations(Animations)](docs/set-sprite-animations.md).\n\n## Example\n\n```blocks\nlet mySprite = Render.getRenderSpriteVariable()\nmySprite.setPosition(100,100)\nlet animations = Render.createAnimations(150, [img`\n    . . . f 4 4 f f f f . . . . . . \n    . . f 4 5 5 4 5 f b f f . . . . \n    . . f 5 5 5 5 4 e 3 3 b f . . . \n    . . f e 4 4 4 e 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 e e 3 b e 3 3 3 3 f . . \n    . f 3 3 e e e f f 3 3 3 3 f . . \n    . f 3 e e e f b f b b b b f . . \n    . . f e 4 4 f 1 e b b b b f . . \n    . . . f 4 4 4 4 f b b b b f f . \n    . . . f e e e f f f b b b b f . \n    . . . f d d d e 4 4 f b b f . . \n    . . . f d d d e 4 4 e f f . . . \n    . . f b d b d b e e b f . . . . \n    . . f f 1 d 1 d 1 d f f . . . . \n    . . . . f f b b f f . . . . . . \n    `,img`\n    . . . . . . . . . . . . . . . . \n    . . . f 4 4 f f f f . . . . . . \n    . . f 4 5 5 4 5 f b f f . . . . \n    . . f 5 5 5 5 4 e 3 3 b f . . . \n    . . f e 4 4 4 e 3 3 3 3 b f . . \n    . f 3 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 e e 3 b e 3 3 3 3 f . . \n    . f 3 3 e e e f f 3 3 3 3 f . . \n    . . f e e e f b f b b b b f f . \n    . . . e 4 4 f 1 e b b b b b f . \n    . . . f 4 4 4 4 f b b b b b f . \n    . . . f d d d e 4 4 b b b f . . \n    . . . f d d d e 4 4 f f f . . . \n    . . f d d d b b e e b b f . . . \n    . . f b d 1 d 1 d d b f . . . . \n    . . . f f f b b f f f . . . . . \n    `], [img`\n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 4 5 5 5 5 4 e f . . . \n    . . f b 3 e 4 4 4 4 e 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 e b 3 e e 3 b e 3 3 f . \n    . f 3 3 f f e e e e f f 3 3 f . \n    . f b b f b f e e f b f b b f . \n    . f b b e 1 f 4 4 f 1 e b b f . \n    f f b b f 4 4 4 4 4 4 f b b f f \n    f b b f f f e e e e f f f b b f \n    . f e e f b d d d d b f e e f . \n    . . e 4 c d d d d d d c 4 e . . \n    . . e f b d b d b d b b f e . . \n    . . . f f 1 d 1 d 1 d f f . . . \n    . . . . . f f b b f f . . . . . \n    `,img`\n    . . . . . . . f f . . . . . . . \n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 4 5 5 5 5 4 e f . . . \n    . . f b 3 e 4 4 4 4 e 3 b f . . \n    . f e 3 3 3 3 3 3 3 3 3 3 e f . \n    . f 3 3 e b 3 e e 3 b e 3 3 f . \n    . f b 3 f f e e e e f f 3 b f . \n    f f b b f b f e e f b f b b f f \n    f b b b e 1 f 4 4 f 1 e b b b f \n    . f b b e e 4 4 4 4 4 f b b f . \n    . . f 4 4 4 e d d d b f e f . . \n    . . f e 4 4 e d d d d c 4 e . . \n    . . . f e e d d b d b b f e . . \n    . . . f f 1 d 1 d 1 1 f f . . . \n    . . . . . f f f b b f . . . . . \n    `,img`\n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 4 5 5 5 5 4 e f . . . \n    . . f b 3 e 4 4 4 4 e 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 e b 3 e e 3 b e 3 3 f . \n    . f 3 3 f f e e e e f f 3 3 f . \n    . f b b f b f e e f b f b b f . \n    . f b b e 1 f 4 4 f 1 e b b f . \n    f f b b f 4 4 4 4 4 4 f b b f f \n    f b b f f f e e e e f f f b b f \n    . f e e f b d d d d b f e e f . \n    . . e 4 c d d d d d d c 4 e . . \n    . . e f b d b d b d b b f e . . \n    . . . f f 1 d 1 d 1 d f f . . . \n    . . . . . f f b b f f . . . . . \n    `,img`\n    . . . . . . . f f . . . . . . . \n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 4 5 5 5 5 4 e f . . . \n    . . f b 3 e 4 4 4 4 e 3 b f . . \n    . f e 3 3 3 3 3 3 3 3 3 3 e f . \n    . f 3 3 e b 3 e e 3 b e 3 3 f . \n    . f b 3 f f e e e e f f 3 b f . \n    f f b b f b f e e f b f b b f f \n    f b b b e 1 f 4 4 f 1 e b b b f \n    . f b b f 4 4 4 4 4 e e b b f . \n    . . f e f b d d d e 4 4 4 f . . \n    . . e 4 c d d d d e 4 4 e f . . \n    . . e f b b d b d d e e f . . . \n    . . . f f 1 1 d 1 d 1 f f . . . \n    . . . . . f b b f f f . . . . . \n    `], [img`\n    . . . . . . f f f f 4 4 f . . . \n    . . . . f f b f 5 4 5 5 4 f . . \n    . . . f b 3 3 e 4 5 5 5 5 f . . \n    . . f b 3 3 3 3 e 4 4 4 e f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . . f 3 3 3 3 e b 3 e e 3 3 f . \n    . . f 3 3 3 3 f f e e e 3 3 f . \n    . . f b b b b f b f e e e 3 f . \n    . . f b b b b e 1 f 4 4 e f . . \n    . f f b b b b f 4 4 4 4 f . . . \n    . f b b b b f f f e e e f . . . \n    . . f b b f 4 4 e d d d f . . . \n    . . . f f e 4 4 e d d d f . . . \n    . . . . f b e e b d b d b f . . \n    . . . . f f d 1 d 1 d 1 f f . . \n    . . . . . . f f b b f f . . . . \n    `,img`\n    . . . . . . . . . . . . . . . . \n    . . . . . . f f f f 4 4 f . . . \n    . . . . f f b f 5 4 5 5 4 f . . \n    . . . f b 3 3 e 4 5 5 5 5 f . . \n    . . f b 3 3 3 3 e 4 4 4 e f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 3 f . \n    . . f 3 3 3 3 e b 3 e e 3 3 f . \n    . . f 3 3 3 3 f f e e e 3 3 f . \n    . f f b b b b f b f e e e f . . \n    . f b b b b b e 1 f 4 4 e . . . \n    . f b b b b b f 4 4 4 4 f . . . \n    . . f b b b 4 4 e d d d f . . . \n    . . . f f f 4 4 e d d d f . . . \n    . . . f b b e e b b d d d f . . \n    . . . . f b d d 1 d 1 d b f . . \n    . . . . . f f f b b f f f . . . \n    `], [img`\n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 3 3 3 3 3 3 e f . . . \n    . . f b 3 3 3 3 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 3 3 3 3 3 3 3 3 3 3 f . \n    . f b 3 3 3 3 3 3 3 3 3 3 b f . \n    . f b b 3 3 3 3 3 3 3 3 b b f . \n    . f b b b b b b b b b b b b f . \n    f c b b b b b b b b b b b b c f \n    f b b b b b b b b b b b b b b f \n    . f c c b b b b b b b b c c f . \n    . . e 4 c f f f f f f c 4 e . . \n    . . e f b d b d b d b b f e . . \n    . . . f f 1 d 1 d 1 d f f . . . \n    . . . . . f f b b f f . . . . . \n    `,img`\n    . . . . . . . . . . . . . . . . \n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 3 3 3 3 3 3 e f . . . \n    . . f b 3 3 3 3 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f b 3 3 3 3 3 3 3 3 3 3 b f . \n    . f b b 3 3 3 3 3 3 3 3 b b f . \n    . f b b b b b b b b b b b b f . \n    f c b b b b b b b b b b b b f . \n    f b b b b b b b b b b b b c f . \n    f f b b b b b b b b b b c f . . \n    . f c c c f f f f f f f e c . . \n    . . . f b b d b d d e 4 4 e . . \n    . . . f f 1 1 d 1 d e e f . . . \n    . . . . . f b b f f f . . . . . \n    `,img`\n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 3 3 3 3 3 3 e f . . . \n    . . f b 3 3 3 3 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 3 3 3 3 3 3 3 3 3 3 f . \n    . f b 3 3 3 3 3 3 3 3 3 3 b f . \n    . f b b 3 3 3 3 3 3 3 3 b b f . \n    . f b b b b b b b b b b b b f . \n    f c b b b b b b b b b b b b c f \n    f b b b b b b b b b b b b b b f \n    . f c c b b b b b b b b c c f . \n    . . e 4 c f f f f f f c 4 e . . \n    . . e f b d b d b d b b f e . . \n    . . . f f 1 d 1 d 1 d f f . . . \n    . . . . . f f b b f f . . . . . \n    `,img`\n    . . . . . . . . . . . . . . . . \n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 3 3 3 3 3 3 e f . . . \n    . . f b 3 3 3 3 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f b 3 3 3 3 3 3 3 3 3 3 b f . \n    . f b b 3 3 3 3 3 3 3 3 b b f . \n    . f b b b b b b b b b b b b f . \n    . f b b b b b b b b b b b b c f \n    . f c b b b b b b b b b b b b f \n    . . f c b b b b b b b b b b f f \n    . . c e f f f f f f f c c c f . \n    . . e 4 4 e d d b d b b f . . . \n    . . . f e e d 1 d 1 1 f f . . . \n    . . . . . f f f b b f . . . . . \n    `])\nRender.setSpriteAnimations(mySprite, animations)\n\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\nanimation\n```","docs/get-attribute.md":"# get Attribute\n\n * Get render arribute\n\n```sig\nRender.getAttribute()\n```\n\n\n## Parameters\n* **attribute**  dirX,dirY,fov,wallZScale\n## ~hint\n * **dirX**: view direction x\n * **dirY**: view direction y\n * **fov**:  field of view, for zoom in/out, default value can be get by [defaultFov](docs/default-fov.md)\n * **wallZScale**: scale up/down height of walls in z dimension, this is a radio value, default is 1.\n## ~\n\n## Returns\n\n* value according to specific \n\n## Example\n\n```blocks\nlet v=Render.getAttribute(Render.attribute.fov)/2\nRender.SetAttribute(Render.attribute.fov, v)\n)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/get-default-fov.md":"# get Default Fov\n\n * Get default FOV (field of view) value\n\n```sig\nRender.getDefaultFov()\n```\n\n\n## Parameters\n* none\n\n## Returns\n\n* The default fov(field of view) value, is 0.666... (or 2/3)\n\n    ## ~hint\n    * field of view, for zoom in/out\n    * it is a ratio of view plane vector x & y, or \"half view width\" and \"distance to view plane\"\n    * if you facing the wall and 1 wall height a way from it, just seeing wall full fill the screen in vertical direction, the distance=screen.height, so for arcade screen that is: 160/2 /120 = 2/3.\n    * so, half default will zoom in x2, while double default value means very wide( x2 ) field of view\n    ## ~\n\n## Example\n\n```blocks\n\ntiles.setCurrentTilemap(tilemap`level1`)\n\nlet v=Render.getDefaultFov()/2\nRender.SetAttribute(Render.attribute.fov, v)\n)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/get-render-sprite-instance.md":"# get Render Sprite Instance\n\nGet the render Sprite, which create automatically, for physical collisions, and holding the view point.\n\n```sig\nRender.getRenderSpriteInstance()\n```\n\n## ~hint\n* You can consider it as \"myself\", and operate it like a usual sprite, eg.: position, speed, scale, collision, ... \n* But properties relative 3D, eg. ZOffset, ZPosition, viewAngle, and etc. are not in the Sprite class.\n## ~\n\n## Parameters\n\n* none\n\n## Returns\n\n* a game [sprite](/types/sprite) which raycasting render using for view point.\n\n## Example\n\n```blocks\nRender.getRenderSpriteInstance().setPosition(100,100)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/get-render-sprite-variable.md":"# get Render Sprite Variable\n\nGet the render Sprite, which create automatically, for physical collisions, and holding the view point.\n\n```sig\nRender.getRenderSpriteVariable()\n```\n\n## ~hint\n* You can consider it as \"myself\", and operate it like a usual sprite, eg.: position, speed, scale, collision, ... \n* But properties relative 3D, eg. ZOffset, ZPosition, viewAngle, and etc. are not in the Sprite class.\n## ~\n\n## Parameters\n\n* none\n\n## Returns\n\n* a game [sprite](/types/sprite) which raycasting render using for view point.\n\n## Example\n\n```blocks\nlet mySprite = Render.getRenderSpriteVariable()\nmySprite.setPosition(100,100)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/is-sprites-overlap-z.md":"# is Sprite Overlap Z\n\n * Check if 2 sprites overlaps each another in Z dimension\n\n```sig\nRender.isSpritesOverlapZ()\n```\n\n\n## Parameters\n* **sprite1** [sprite](/types/sprite) to check with\n* **sprite2** [sprite](/types/sprite) to check with\n## ~hint\n * Best work together with sprites.onOverlap(kind1, kind2), which check overlaping in X&Y dimension\n## ~\n\n## Returns\n\n* a [boolean](types/boolean): true if overlaped at Z dimension, nothing todo with X Y dimension\n\n## Example\n\n```blocks\nsprites.onOverlap(SpriteKind.Enemy, SpriteKind.Projectile, function (sprite, otherSprite) {\n    if (Render.isSpritesOverlapZ(sprite, otherSprite)) {\n        otherSprite.destroy()\n        info.changeScoreBy(1)\n    }\n})\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/is-view-mode.md":"# is View Mode\n\n *  Current view mode is the specific one?\n\n```sig\nRender.isViewMode()\n```\n\n## ~hint\n * The raycastingView: rendered by raycasting, 3D (or aka 2.5D) \n * The tilemapView: traditional flat tilemap, 2D\n * By default this render working in raycastingView, and can be switch to tilemapView any time, or switch back to raycastingView any time.\n * According result switch difference background image.\n## ~\n\n## Parameters\n* **viewMode** raycastingView or tilemapView\n\n## Returns\n\n* a [boolean](types/boolean): true if current view mode is specific one.\n\n## Example\n\n```blocks\ncontroller.menu.onEvent(ControllerButtonEvent.Pressed, function () {\n    Render.toggleViewMode()\n    if (Render.isViewMode(ViewMode.tilemapView)) {\n        scene.setBackgroundImage(img`\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            `)\n    } else {\n        scene.setBackgroundImage(img`\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            ................................................................................................................................................................\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n            `)\n    }\n})\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/jump-with-height-and-duration.md":"# jump With Height And Duration\n\n * Make sprite jump, with specific height and duration\n\n```sig\nRender.jumpWithHeightAndDuration()\n```\n\n\n## Parameters\n* **sprite**\n* **height** jump height in pixel\n* **duration** hover time span, unit: ms\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\ncontroller.B.onEvent(ControllerButtonEvent.Pressed, function () {\n    Render.jumpWithHeightAndDuration(Render.getRenderSpriteInstance(), 8, 500)\n})\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/jump.md":"# jump\n\n * Make sprite jump, with specific speed and acceleration\n * Simular with Move block, but jump can only happened when sprite is standing, current height = its offset.\n\n```sig\nRender.jump()\n```\n\n\n## Parameters\n* **sprite**\n* **v** vetical speed, unit: pixel/s\n* **a** vetical acceleration, unit: pixel/sÂ²\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\ncontroller.B.onEvent(ControllerButtonEvent.Pressed, function () {\n    Render.jump(mySprite)\n    Render.jump(mySprite, 60, -200)\n})\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/move-with-controller.md":"# move With Controller\n\n* Control the self sprite using the arrow buttons from the controller. \n* To stop controlling self sprite, pass 0 for v and va.\n\n```sig\nRender.moveWithController()\n```\n\n\n## Parameters\n * **v** The velocity used for forward/backword movement when up/down is pressed, in pixel/s\n * **va** The angle velocity used for turn view direction when left/right is pressed, in radian/s.\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\nRender.moveWithController(2, 3)\n```\n\nFor disable moving control inside the extension:\n```blocks\nRender.moveWithController(0, 0)\ncontroller.moveSprite(Render.getRenderSpriteInstance(), 100, 100)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/move.md":"# move\n\n * Make sprite jump, with specific speed and acceleration\n * Simular with jump block, but jump can only happened when sprite is standing, current height = its offset.\n\n```sig\nRender.move()\n```\n\n\n## Parameters\n* **sprite**\n* **v** vetical speed, unit: pixel/s\n* **a** vetical acceleration, unit: pixel/sÂ²\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\ncontroller.B.onEvent(ControllerButtonEvent.Pressed, function () {\n    Render.move(mySprite, 60, -200)\n})\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/register-on-sprite-direction-update-handler.md":"# register On Sprite Direction Update Handler\n\n* Run on sprite dirction updated, present view point to Sprite facing dirction, or which angle you see of the sprite.\n\n```sig\nRender.registerOnSpriteDirectionUpdateHandler()\n```\n\n## ~hint\n* Not required, if you have used the set animations block provided.\n* Used for working with other animation extensions, to set proper Image for sprite according to current seeing direction.\n## ~\n\n## Parameters\n  * **dir** It is a float number, 0 ~ 1 corresponds to 0 ~ 360Â°, suggest use Math.round(dir*dirAniTotalCount)%dirAniTotalCount to get index of direction\n## Returns\n\n* none\n\n## Example\n\n```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . b 5 b . . . \n    . . . . . . . . . b 5 b . . . . \n    . . . . . . b b b b b b . . . . \n    . . . . . b b 5 5 5 5 5 b . . . \n    . . . . b b 5 d 1 f 5 d 4 c . . \n    . . . . b 5 5 1 f f d d 4 4 4 b \n    . . . . b 5 5 d f b 4 4 4 4 b . \n    . . . b d 5 5 5 5 4 4 4 4 b . . \n    . b b d d d 5 5 5 5 5 5 5 b . . \n    b d d d b b b 5 5 5 5 5 5 5 b . \n    c d d b 5 5 d c 5 5 5 5 5 5 b . \n    c b b d 5 d c d 5 5 5 5 5 5 b . \n    c b 5 5 b c d d 5 5 5 5 5 5 b . \n    b b c c c d d d 5 5 5 5 5 d b . \n    . . . . c c d d d 5 5 5 b b . . \n    . . . . . . c c c c c b b . . . \n    `, SpriteKind.Player)\nlet list = [\n    img`\n        . . . . . . f f f f . . . . . . \n        . . . . f f f 2 2 f f f . . . . \n        . . . f f f 2 2 2 2 f f f . . . \n        . . f f f e e e e e e f f f . . \n        . . f f e 2 2 2 2 2 2 e e f . . \n        . . f e 2 f f f f f f 2 e f . . \n        . . f f f f e e e e f f f f . . \n        . f f e f b f 4 4 f b f e f f . \n        . f e e 4 1 f d d f 1 4 e e f . \n        . . f e e d d d d d d e e f . . \n        . . . f e e 4 4 4 4 e e f . . . \n        . . e 4 f 2 2 2 2 2 2 f 4 e . . \n        . . 4 d f 2 2 2 2 2 2 f d 4 . . \n        . . 4 4 f 4 4 5 5 4 4 f 4 4 . . \n        . . . . . f f f f f f . . . . . \n        . . . . . f f . . f f . . . . . \n        `,\n    img`\n        . . . . . . . . . . . . . . . . \n        . . . . . . f f f f . . . . . . \n        . . . . f f f 2 2 f f f . . . . \n        . . . f f f 2 2 2 2 f f f . . . \n        . . f f f e e e e e e f f f . . \n        . . f f e 2 2 2 2 2 2 e e f . . \n        . f f e 2 f f f f f f 2 e f f . \n        . f f f f f e e e e f f f f f . \n        . . f e f b f 4 4 f b f e f . . \n        . . f e 4 1 f d d f 1 4 e f . . \n        . . . f e 4 d d d d 4 e f e . . \n        . . f e f 2 2 2 2 e d d 4 e . . \n        . . e 4 f 2 2 2 2 e d d e . . . \n        . . . . f 4 4 5 5 f e e . . . . \n        . . . . f f f f f f f . . . . . \n        . . . . f f f . . . . . . . . . \n        `,\n    img`\n        . . . . . . f f f f . . . . . . \n        . . . . f f f 2 2 f f f . . . . \n        . . . f f f 2 2 2 2 f f f . . . \n        . . f f f e e e e e e f f f . . \n        . . f f e 2 2 2 2 2 2 e e f . . \n        . . f e 2 f f f f f f 2 e f . . \n        . . f f f f e e e e f f f f . . \n        . f f e f b f 4 4 f b f e f f . \n        . f e e 4 1 f d d f 1 4 e e f . \n        . . f e e d d d d d d e e f . . \n        . . . f e e 4 4 4 4 e e f . . . \n        . . e 4 f 2 2 2 2 2 2 f 4 e . . \n        . . 4 d f 2 2 2 2 2 2 f d 4 . . \n        . . 4 4 f 4 4 5 5 4 4 f 4 4 . . \n        . . . . . f f f f f f . . . . . \n        . . . . . f f . . f f . . . . . \n        `,\n    img`\n        . . . . . . . . . . . . . . . . \n        . . . . . . f f f f . . . . . . \n        . . . . f f f 2 2 f f f . . . . \n        . . . f f f 2 2 2 2 f f f . . . \n        . . f f f e e e e e e f f f . . \n        . . f e e 2 2 2 2 2 2 e f f . . \n        . f f e 2 f f f f f f 2 e f f . \n        . f f f f f e e e e f f f f f . \n        . . f e f b f 4 4 f b f e f . . \n        . . f e 4 1 f d d f 1 4 e f . . \n        . . e f e 4 d d d d 4 e f . . . \n        . . e 4 d d e 2 2 2 2 f e f . . \n        . . . e d d e 2 2 2 2 f 4 e . . \n        . . . . e e f 5 5 4 4 f . . . . \n        . . . . . f f f f f f f . . . . \n        . . . . . . . . . f f f . . . . \n        `\n    ]\nRender.registerOnSpriteDirectionUpdateHandler(function (spr, dir) {\n    let FrameIndex = Math.round(dir * list.length) % list.length\n    mySprite.setImage(list[FrameIndex])\n})\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```\n","docs/set-attribute.md":"# set Attribute\n\n * Set render arribute\n\n```sig\nRender.setAttribute()\n```\n\n\n## Parameters\n* **attribute**  dirX,dirY,fov,wallZScale\n* **value**\n## ~hint\n * **dirX**: view direction x\n * **dirY**: view direction y\n * **fov**:  field of view, for zoom in/out, default value can be get by [defaultFov](/default-fov)\n * **wallZScale**: scale up/down height of walls in z dimension, this is a radio value, default is 1.\n## ~\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\nRender.setAttribute(Render.attribute.fov, Render.getAttribute(Render.attribute.fov)/2)\n)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/set-sprite-animations.md":"# set Sprite Animations\n\n * Apply a directional animations on a sprite\n\n```sig\nRender.setSpriteAnimations(Sprite, Render.Animations)\n```\n\n## Parameters\n * **sprite** the [sprite](/types/sprite) to animate on\n * **animations** the directional animates, created by [Render.createAnimations](docs/create-animations.md)\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\nlet mySprite = Render.getRenderSpriteVariable()\nmySprite.setPosition(100,100)\nlet animations = Render.createAnimations(150, [img`\n    . . . f 4 4 f f f f . . . . . . \n    . . f 4 5 5 4 5 f b f f . . . . \n    . . f 5 5 5 5 4 e 3 3 b f . . . \n    . . f e 4 4 4 e 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 e e 3 b e 3 3 3 3 f . . \n    . f 3 3 e e e f f 3 3 3 3 f . . \n    . f 3 e e e f b f b b b b f . . \n    . . f e 4 4 f 1 e b b b b f . . \n    . . . f 4 4 4 4 f b b b b f f . \n    . . . f e e e f f f b b b b f . \n    . . . f d d d e 4 4 f b b f . . \n    . . . f d d d e 4 4 e f f . . . \n    . . f b d b d b e e b f . . . . \n    . . f f 1 d 1 d 1 d f f . . . . \n    . . . . f f b b f f . . . . . . \n    `,img`\n    . . . . . . . . . . . . . . . . \n    . . . f 4 4 f f f f . . . . . . \n    . . f 4 5 5 4 5 f b f f . . . . \n    . . f 5 5 5 5 4 e 3 3 b f . . . \n    . . f e 4 4 4 e 3 3 3 3 b f . . \n    . f 3 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 e e 3 b e 3 3 3 3 f . . \n    . f 3 3 e e e f f 3 3 3 3 f . . \n    . . f e e e f b f b b b b f f . \n    . . . e 4 4 f 1 e b b b b b f . \n    . . . f 4 4 4 4 f b b b b b f . \n    . . . f d d d e 4 4 b b b f . . \n    . . . f d d d e 4 4 f f f . . . \n    . . f d d d b b e e b b f . . . \n    . . f b d 1 d 1 d d b f . . . . \n    . . . f f f b b f f f . . . . . \n    `], [img`\n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 4 5 5 5 5 4 e f . . . \n    . . f b 3 e 4 4 4 4 e 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 e b 3 e e 3 b e 3 3 f . \n    . f 3 3 f f e e e e f f 3 3 f . \n    . f b b f b f e e f b f b b f . \n    . f b b e 1 f 4 4 f 1 e b b f . \n    f f b b f 4 4 4 4 4 4 f b b f f \n    f b b f f f e e e e f f f b b f \n    . f e e f b d d d d b f e e f . \n    . . e 4 c d d d d d d c 4 e . . \n    . . e f b d b d b d b b f e . . \n    . . . f f 1 d 1 d 1 d f f . . . \n    . . . . . f f b b f f . . . . . \n    `,img`\n    . . . . . . . f f . . . . . . . \n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 4 5 5 5 5 4 e f . . . \n    . . f b 3 e 4 4 4 4 e 3 b f . . \n    . f e 3 3 3 3 3 3 3 3 3 3 e f . \n    . f 3 3 e b 3 e e 3 b e 3 3 f . \n    . f b 3 f f e e e e f f 3 b f . \n    f f b b f b f e e f b f b b f f \n    f b b b e 1 f 4 4 f 1 e b b b f \n    . f b b e e 4 4 4 4 4 f b b f . \n    . . f 4 4 4 e d d d b f e f . . \n    . . f e 4 4 e d d d d c 4 e . . \n    . . . f e e d d b d b b f e . . \n    . . . f f 1 d 1 d 1 1 f f . . . \n    . . . . . f f f b b f . . . . . \n    `,img`\n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 4 5 5 5 5 4 e f . . . \n    . . f b 3 e 4 4 4 4 e 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 e b 3 e e 3 b e 3 3 f . \n    . f 3 3 f f e e e e f f 3 3 f . \n    . f b b f b f e e f b f b b f . \n    . f b b e 1 f 4 4 f 1 e b b f . \n    f f b b f 4 4 4 4 4 4 f b b f f \n    f b b f f f e e e e f f f b b f \n    . f e e f b d d d d b f e e f . \n    . . e 4 c d d d d d d c 4 e . . \n    . . e f b d b d b d b b f e . . \n    . . . f f 1 d 1 d 1 d f f . . . \n    . . . . . f f b b f f . . . . . \n    `,img`\n    . . . . . . . f f . . . . . . . \n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 4 5 5 5 5 4 e f . . . \n    . . f b 3 e 4 4 4 4 e 3 b f . . \n    . f e 3 3 3 3 3 3 3 3 3 3 e f . \n    . f 3 3 e b 3 e e 3 b e 3 3 f . \n    . f b 3 f f e e e e f f 3 b f . \n    f f b b f b f e e f b f b b f f \n    f b b b e 1 f 4 4 f 1 e b b b f \n    . f b b f 4 4 4 4 4 e e b b f . \n    . . f e f b d d d e 4 4 4 f . . \n    . . e 4 c d d d d e 4 4 e f . . \n    . . e f b b d b d d e e f . . . \n    . . . f f 1 1 d 1 d 1 f f . . . \n    . . . . . f b b f f f . . . . . \n    `], [img`\n    . . . . . . f f f f 4 4 f . . . \n    . . . . f f b f 5 4 5 5 4 f . . \n    . . . f b 3 3 e 4 5 5 5 5 f . . \n    . . f b 3 3 3 3 e 4 4 4 e f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . . f 3 3 3 3 e b 3 e e 3 3 f . \n    . . f 3 3 3 3 f f e e e 3 3 f . \n    . . f b b b b f b f e e e 3 f . \n    . . f b b b b e 1 f 4 4 e f . . \n    . f f b b b b f 4 4 4 4 f . . . \n    . f b b b b f f f e e e f . . . \n    . . f b b f 4 4 e d d d f . . . \n    . . . f f e 4 4 e d d d f . . . \n    . . . . f b e e b d b d b f . . \n    . . . . f f d 1 d 1 d 1 f f . . \n    . . . . . . f f b b f f . . . . \n    `,img`\n    . . . . . . . . . . . . . . . . \n    . . . . . . f f f f 4 4 f . . . \n    . . . . f f b f 5 4 5 5 4 f . . \n    . . . f b 3 3 e 4 5 5 5 5 f . . \n    . . f b 3 3 3 3 e 4 4 4 e f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 3 f . \n    . . f 3 3 3 3 e b 3 e e 3 3 f . \n    . . f 3 3 3 3 f f e e e 3 3 f . \n    . f f b b b b f b f e e e f . . \n    . f b b b b b e 1 f 4 4 e . . . \n    . f b b b b b f 4 4 4 4 f . . . \n    . . f b b b 4 4 e d d d f . . . \n    . . . f f f 4 4 e d d d f . . . \n    . . . f b b e e b b d d d f . . \n    . . . . f b d d 1 d 1 d b f . . \n    . . . . . f f f b b f f f . . . \n    `], [img`\n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 3 3 3 3 3 3 e f . . . \n    . . f b 3 3 3 3 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 3 3 3 3 3 3 3 3 3 3 f . \n    . f b 3 3 3 3 3 3 3 3 3 3 b f . \n    . f b b 3 3 3 3 3 3 3 3 b b f . \n    . f b b b b b b b b b b b b f . \n    f c b b b b b b b b b b b b c f \n    f b b b b b b b b b b b b b b f \n    . f c c b b b b b b b b c c f . \n    . . e 4 c f f f f f f c 4 e . . \n    . . e f b d b d b d b b f e . . \n    . . . f f 1 d 1 d 1 d f f . . . \n    . . . . . f f b b f f . . . . . \n    `,img`\n    . . . . . . . . . . . . . . . . \n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 3 3 3 3 3 3 e f . . . \n    . . f b 3 3 3 3 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f b 3 3 3 3 3 3 3 3 3 3 b f . \n    . f b b 3 3 3 3 3 3 3 3 b b f . \n    . f b b b b b b b b b b b b f . \n    f c b b b b b b b b b b b b f . \n    f b b b b b b b b b b b b c f . \n    f f b b b b b b b b b b c f . . \n    . f c c c f f f f f f f e c . . \n    . . . f b b d b d d e 4 4 e . . \n    . . . f f 1 1 d 1 d e e f . . . \n    . . . . . f b b f f f . . . . . \n    `,img`\n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 3 3 3 3 3 3 e f . . . \n    . . f b 3 3 3 3 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f 3 3 3 3 3 3 3 3 3 3 3 3 f . \n    . f b 3 3 3 3 3 3 3 3 3 3 b f . \n    . f b b 3 3 3 3 3 3 3 3 b b f . \n    . f b b b b b b b b b b b b f . \n    f c b b b b b b b b b b b b c f \n    f b b b b b b b b b b b b b b f \n    . f c c b b b b b b b b c c f . \n    . . e 4 c f f f f f f c 4 e . . \n    . . e f b d b d b d b b f e . . \n    . . . f f 1 d 1 d 1 d f f . . . \n    . . . . . f f b b f f . . . . . \n    `,img`\n    . . . . . . . . . . . . . . . . \n    . . . . . f f 4 4 f f . . . . . \n    . . . . f 5 4 5 5 4 5 f . . . . \n    . . . f e 3 3 3 3 3 3 e f . . . \n    . . f b 3 3 3 3 3 3 3 3 b f . . \n    . . f 3 3 3 3 3 3 3 3 3 3 f . . \n    . f b 3 3 3 3 3 3 3 3 3 3 b f . \n    . f b b 3 3 3 3 3 3 3 3 b b f . \n    . f b b b b b b b b b b b b f . \n    . f b b b b b b b b b b b b c f \n    . f c b b b b b b b b b b b b f \n    . . f c b b b b b b b b b b f f \n    . . c e f f f f f f f c c c f . \n    . . e 4 4 e d d b d b b f . . . \n    . . . f e e d 1 d 1 1 f f . . . \n    . . . . . f f f b b f . . . . . \n    `])\nRender.setSpriteAnimations(mySprite, animations)\n\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\nanimation\n```","docs/set-view-angle-in-degree.md":"# set View Angle In Degree\n\n * Set view angle\n\n```sig\nRender.setViewAngleInDegree()\n```\n\n## Parameters\n* **angle** angle value 0~360 Â°\n## ~hint\n * angle=0 facing east, 90 facing south; 180 facing west; 270 facing north\n## ~\n\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\nRender.setViewAngleInDegree(180)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/set-view-angle.md":"# set View Angle\n\n * Set view angle\n\n```sig\nRender.setViewAngle()\n```\n\n## Parameters\n* **dirX** facing dirction vector x\n* **dirY** facing dirction vector Y\n## ~hint\n * x=1 y=0 facing east;\n * x=0 y=1 facing south;\n * x=-1 y=0 facing west;\n * x=0 y=-1 facing north\n * dirX/Y values can be any number, not limited in -1,0,1\n * inside, the angle of view = Math.atan2(dirY,dirX)\n## ~\n\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\nRender.setViewAngle(0,-1)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/set-view-mode.md":"# set View Mode\n\n * set current view mode to tilemapView or raycastingView \n\n```sig\nRender.setViewMode()\n```\n\n## ~hint\n * The raycastingView: rendered by raycasting, 3D (or aka 2.5D) \n * The tilemapView: traditional flat tilemap, 2D\n * By default this render working in raycastingView, and can be switch to tilemapView any time, or switch back to raycastingView any time.\n * Could place inside the [on Event of Button](/reference/controller/button/on-event) block, with Pressed/Released, for switch view mode back and forth.\n## ~\n\n## Parameters\n* **viewMode** raycastingView or tilemapView\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\ncontroller.menu.onEvent(ControllerButtonEvent.Pressed, function () {\n    Render.setViewMode(ViewMode.tilemapView)\n})\ncontroller.menu.onEvent(ControllerButtonEvent.Released, function () {\n    Render.setViewMode(ViewMode.raycastingView)\n})\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/set-z-offset.md":"# set Z Offset\n\n * Set floating offset height for a sprite at Z direction\n\n```sig\nRender.setZOffset()\n```\n\n\n## Parameters\n* **sprite** the [sprite](/types/sprite) to be set\n* **Zoffset** in pixels, negative floats down, affirmative goes up\n* **duration** moving time, if new value diff from current position at Z dimension. 0 for immediately, unit: ms\n## ~hint\n    * the myself sprite can also be set Z Offset value.\n## ~\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\nRender.setZOffset(mySprite, 8)\nRender.setZOffset(Render.getRenderSpriteInstance(), 8)\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/takeover-scene-sprites.md":"# takeover Scene Sprites\n\n* Render takeover all sprites in current scene\n\n```sig\nRender.takeoverSceneSprites()\n```\n\n## ~hint\n* Render will call this automatically, so not required usually.\n* Call this just after created the sprite, only if you saw sprite draw at its tilemap position on screen\n## ~\n\n## Parameters\n* none\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\nlet mySprite = sprites.create(img`\n    . . . . . . . . . . b 5 b . . . \n    . . . . . . . . . b 5 b . . . . \n    . . . . . . b b b b b b . . . . \n    . . . . . b b 5 5 5 5 5 b . . . \n    . . . . b b 5 d 1 f 5 d 4 c . . \n    . . . . b 5 5 1 f f d d 4 4 4 b \n    . . . . b 5 5 d f b 4 4 4 4 b . \n    . . . b d 5 5 5 5 4 4 4 4 b . . \n    . b b d d d 5 5 5 5 5 5 5 b . . \n    b d d d b b b 5 5 5 5 5 5 5 b . \n    c d d b 5 5 d c 5 5 5 5 5 5 b . \n    c b b d 5 d c d 5 5 5 5 5 5 b . \n    c b 5 5 b c d d 5 5 5 5 5 5 b . \n    b b c c c d d d 5 5 5 5 5 d b . \n    . . . . c c d d d 5 5 5 b b . . \n    . . . . . . c c c c c b b . . . \n    `, SpriteKind.Player)\nRender.takeoverSceneSprites()\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","docs/toggle-view-mode.md":"# toggle View Mode\n\n * Toggle current view mode, between tilemapView & raycastingView \n\n```sig\nRender.toggleViewMode()\n```\n\n## ~hint\n * The raycastingView: rendered by raycasting, 3D (or aka 2.5D) \n * The tilemapView: traditional flat tilemap, 2D\n * By default this render working in raycastingView, and can be switch to tilemapView any time, or switch back to raycastingView any time.\n * Could place inside the [on Event of Button](/reference/controller/button/on-event) block, for switch view mode back and forth.\n## ~\n\n## Parameters\n* none\n\n## Returns\n\n* none\n\n## Example\n\n```blocks\ncontroller.A.onEvent(ControllerButtonEvent.Pressed, function () {\n    Render.toggleViewMode()\n})\n```\n\n```package\npxt-raycasting=github:aqeeaqee/pxt-raycasting\n```","main.ts":"game.stats = true\nconst rcRender = Render.raycastingRender\n\nlet trans16 = image.create(16, 16)\nscene.setBackgroundImage(img`\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    ................................................................................................................................................................\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n    bbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbbb\n`)\nlet map = tiles.createTilemap(hex``, img`\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . 2 2 2 . . 2 2 2 2 . . 2 \n2 . . . 2 . . . . . . . 2 . . 2 \n2 . . . 2 . . . . . . . 2 . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . 2 . . . . . . 2 \n2 . . . 2 . . . . . . . 2 . . 2 \n2 . . . 2 . . . . . . . 2 . . 2 \n2 . . . 2 2 2 2 . . 2 2 2 . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 \n`, [trans16, sprites.castle.tileGrass2, sprites.builtin.forestTiles0], TileScale.Sixteen);\n// tiles.setCurrentTilemap(map)\nconst tm= tilemap`level1`\ntm.scale = TileScale.ThirtyTwo\ntiles.setCurrentTilemap(tm)\n\nconst tilemapScale = 1 << game.currentScene().tileMap.scale\nrcRender.sprSelf.setPosition(8 * tilemapScale, 8 * tilemapScale)\n\nlet count = 0\nfunction createSprite(x: number, y: number, vx: number, vy: number, textures: Image[][], kind: number) {\n    const spr = sprites.create(textures[0][0], kind)\n    // rcRender.takeoverSceneSprites()\n    const tilemapScale = 1 << game.currentScene().tileMap.scale\n    spr.setPosition(x * tilemapScale, y * tilemapScale)\n    spr.setVelocity(vx, vy)\n    spr.setBounceOnWall(true)\n    spr.setScale(0.5)\n    // setCharacterAnimationForSprite(spr, textures)\n    Render.setSpriteAnimations(spr, Render.createAnimations(150, textures[0], textures[1], textures[2], textures[3]))\n    // if (kind == SpriteKind.Enemy)\n    //     tiles.placeOnRandomTile(spr, trans16)\n    // spr.sayText(spr.id+\"\")\n    return spr\n}\n\n// 0<= dir <1, then may be added by 2 for avoid negative\n// rcRender.registerOnSpriteDirectionUpdate((spr, dir) => {\n//     // character.setCharacterState(spr, character.rule(characterAniDirs[Math.floor(dir * 4 + .5) % 4]))\n// })\n\ncreateSprite(8, 7, 6, 10, texturesDuck, SpriteKind.Enemy)\ncreateSprite(6, 7, 6, 10, texturesDonut, SpriteKind.Enemy)\ncreateSprite(5, 7, 6, 10, texturesDog, SpriteKind.Enemy)\nlet sprPriness2 = createSprite(11, 8, 6, 10, texturesPrincess2, SpriteKind.Enemy)\nlet sprHero = createSprite(10, 8, 6, 10, texturesHero, SpriteKind.Enemy)\nlet sprSkelly = createSprite(11, 7, 6, 10, texturesSkelly, SpriteKind.Enemy)\nlet sprPriness = createSprite(10, 7, 6, 10, texturesPrincess, SpriteKind.Enemy)\nlet sprPlane=createSprite(9, 7, 6, 10, texturesPlane, SpriteKind.Enemy)\nlet cake = createSprite(7, 8, 0, 0, texturesBigCake, SpriteKind.Enemy)\nlet fish = createSprite(7, 9, 0, 0, texturesFish, SpriteKind.Enemy)\nrcRender.setZOffset(sprSkelly, 4)\nrcRender.setZOffset(sprPlane, 16)\nrcRender.setZOffset(cake, 4)\nrcRender.setZOffset(fish, 8)\n\n// for(let i=0;i<10;i++){\n//     let spr=createSprite(4, 7, Math.randomRange(5,10), Math.randomRange(3,10), texturesCoin, SpriteKind.Food)\n//     tiles.placeOnRandomTile(spr, trans16)\n//     rcRender.setZOffset(spr,.25)\n// }\n\ncontroller.A.onEvent(ControllerButtonEvent.Pressed, () => {\n    music.pewPew.play()\n    let s = sprites.createProjectileFromSprite(sprites.projectile.bubble1, rcRender.sprSelf, rcRender.dirX * 55, rcRender.dirY * 55)\n    s.setScale(0.25)\n    rcRender.setZOffset(s, rcRender.getMotionZPosition(rcRender.sprSelf)+2)  //todo, use VP height\n})\n\nsprites.onOverlap(SpriteKind.Enemy, SpriteKind.Projectile, function (sprite, otherSprite) {\n    if(!rcRender.isOverlapZ(sprite, otherSprite)) return\n\n    sprite.setVelocity(0, 0)\n    sprite.sayText(\"No!\", 2000)\n    rcRender.move(sprite,60,-160)\n    rcRender.setZOffset(sprite,0)\n    music.baDing.play()\n    sprite.setKind(SpriteKind.Food)\n    info.changeScoreBy(1)\n    otherSprite.destroy()\n    Render.setSpriteAnimations(sprite, new Render.Animations(120, texturesCoin))\n    sprite.setImage(sprites.builtin.coin0)\n    sprite.setScale(.5)\n})\n\nsprites.onOverlap(SpriteKind.Enemy, SpriteKind.Food, function (sprite, otherSprite) {\n    // music.pewPew.play()\n    // otherSprite.destroy()\n})\nsprites.onOverlap(SpriteKind.Enemy, SpriteKind.Enemy, function (sprite, otherSprite) {\n    if (!rcRender.isOverlapZ(sprite, otherSprite)) return\n\n    otherSprite.setVelocity(otherSprite.x - sprite.x, otherSprite.y - sprite.y)\n    sprite.setVelocity(-(otherSprite.x - sprite.x), -(otherSprite.y - sprite.y))\n})\n\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Enemy, function (sprite, otherSprite) {\n    if (!rcRender.isOverlapZ(sprite, otherSprite)) return\n\n})\n\nsprites.onOverlap(SpriteKind.Player, SpriteKind.Food, function (sprite, otherSprite) {\n    if (!rcRender.isOverlapZ(sprite, otherSprite)) return\n\n    music.baDing.play()\n    info.changeLifeBy(1)\n    otherSprite.destroy()\n})\n\ncontroller.menu.onEvent(ControllerButtonEvent.Pressed, () => {\n    rcRender.viewMode = rcRender.viewMode == ViewMode.tilemapView ? ViewMode.raycastingView : ViewMode.tilemapView\n})\n\ncontroller.B.repeatDelay=0\n\nlet isAdjusting=false\ncontroller.anyButton.onEvent(ControllerButtonEvent.Pressed,() => {\n    if (controller.B.isPressed()) {\n        if (controller.A.isPressed()){\n            Render.moveWithController(0, 0)\n            isAdjusting=true\n        }else{\n            rcRender.jumpWithHeightAndDuration(rcRender.sprSelf, tilemapScale, 500)\n        }\n    }\n})\ncontroller.B.onEvent(ControllerButtonEvent.Released, () => {\n    isAdjusting = false\n    Render.moveWithController(3, 1)\n})\ncontroller.A.onEvent(ControllerButtonEvent.Released, () => {\n    isAdjusting = false\n    Render.moveWithController(3, 1)\n})\n\nrcRender.wallZScale = 1\n\nlet zOffset = 0// tilemapScale / 2\nrcRender.setZOffset(rcRender.sprSelf, zOffset)\nlet fov=Render.defaultFov\ngame.onUpdate(() => {\n    if (isAdjusting){\n        // zOffset -= controller.dy(10)\n        // rcRender.setZOffset(rcRender.sprSelf, zOffset, 0)\n        fov -= controller.dy(1)\n        Render.setAttribute(Render.attribute.fov, fov)\n        info.setScore(zOffset * 100)\n    }\n})\n\n\n// controller.B.onEvent(ControllerButtonEvent.Pressed, () => {\n//     for (let fov = Render.defaultFov; fov > Render.defaultFov - .6; fov -= .06) {\n//         rcRender.fov=fov\n//         pause(20)\n//     }\n// })\n// controller.B.onEvent(ControllerButtonEvent.Released, () => {\n//     for (let fov = Render.defaultFov - .6; fov <= Render.defaultFov; fov += .06) {\n//         rcRender.fov=fov\n//         pause(20)\n//     }\n// })\n\n\n// const characterAniDirs = [Predicate.MovingLeft, Predicate.MovingDown, Predicate.MovingRight, Predicate.MovingUp]\n// function setCharacterAnimationForSprite(spr: Sprite, textures: Image[][]) {\n//     characterAniDirs.forEach((dir, i) => {\n//         character.loopFrames(spr, textures[Math.floor(i * textures.length / characterAniDirs.length)], 150, character.rule(dir))\n//     })\n// }\n\n","pxt.json":"{\n    \"name\": \"pxt-raycasting\",\n    \"version\": \"0.3.13\",\n    \"description\": \"\",\n    \"dependencies\": {\n        \"device\": \"*\",\n        \"hw---samd51\": \"*\"\n    },\n    \"files\": [\n        \"README.md\",\n        \"render_raycasting.ts\",\n        \"render_blocks.ts\",\n        \"animation.ts\",\n        \"docs/get-render-sprite-variable.md\",\n        \"docs/get-render-sprite-instance.md\",\n        \"docs/create-animations.md\",\n        \"docs/set-sprite-animations.md\",\n        \"docs/toggle-view-mode.md\",\n        \"docs/is-view-mode.md\",\n        \"docs/set-view-mode.md\",\n        \"docs/get-attribute.md\",\n        \"docs/set-attribute.md\",\n        \"docs/get-default-fov.md\",\n        \"docs/set-view-angle-in-degree.md\",\n        \"docs/set-view-angle.md\",\n        \"docs/set-z-offset.md\",\n        \"docs/is-sprites-overlap-z.md\",\n        \"docs/jump-with-height-and-duration.md\",\n        \"docs/jump.md\",\n        \"docs/move.md\",\n        \"docs/move-with-controller.md\",\n        \"docs/takeover-scene-sprites.md\",\n        \"docs/register-on-sprite-direction-update-handler.md\"\n    ],\n    \"testFiles\": [\n        \"main.ts\",\n        \"tilemap.g.jres\",\n        \"tilemap.g.ts\"\n    ],\n    \"targetVersions\": {\n        \"branch\": \"v0.14.3\",\n        \"tag\": \"v0.14.3\",\n        \"commits\": \"https://github.com/microsoft/pxt-arcade/commits/aef27bb278de89a83ecb6ab02af5319c06d617e2\",\n        \"target\": \"1.8.23\",\n        \"pxt\": \"5.21.6\",\n        \"targetId\": \"arcade\"\n    },\n    \"supportedTargets\": [\n        \"arcade\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","render_blocks.ts":"/**\n * A 2.5D Screen Render, using Raycasting algorithm\n **/\n//% color=#03AA74 weight=1 icon=\"\\uf1b2\" //cube f1b2 , fold f279\n//% groups='[\"Instance\",\"Basic\", \"Dimension Z\", \"Animate\", \"Advanced\"]'\n//% block=\"3D Render\"\nnamespace Render {\n    export enum attribute {\n        dirX,\n        dirY,\n        fov,\n        wallZScale,\n    }\n\n    export class Animations {\n        constructor(public frameInterval: number, public animations: Image[][]) {\n        }\n\n        msLast = 0\n        index = 0\n        iAnimation = 0\n        getFrameByDir(dir: number): Image {\n            if (control.millis() - this.msLast > this.frameInterval) {\n                this.msLast = control.millis()\n                this.index++\n                this.iAnimation = Math.round((dir * this.animations.length)) % this.animations.length\n                if (this.index >= this.animations[this.iAnimation].length)\n                    this.index = 0\n            }\n            return this.animations[this.iAnimation][this.index]\n        }\n    }\n\n    /**\n * Apply a directional image animations on a sprite\n * @param sprite the sprite to animate on\n * @param animations the directional animates\n */\n    //% blockId=set_animation\n    //% block=\"set $sprite=variables_get(mySprite) with animations$animations\"\n    //% animations.shadow=create_animation\n    //% group=\"Animate\"\n    //% weight=100\n    //% help=github:pxt-raycasting/docs/set-sprite-animations\n    export function setSpriteAnimations(sprite: Sprite, animations: Animations) {\n        raycastingRender.spriteAnimations[sprite.id] = animations\n    }\n\n    /**\n * Create a directional image animations, multi animations will applied to one round dirctions averagely, start from the left. \n * The reason that directions start from left, is almost all Arcade out-of-box 1 or 2-dirction images are facing left, so that would be convient for using.\n * @param frameInterval the time between changes, eg: 150\n * @param frames1 animation, if this is the first of multi animation it will be used as left, others will \n * @param frames2 optional, used for 2 or more dirctional\n * @param frames3 optional, used for 3 or more dirctional\n * @param frames4 optional, used for 4 or more dirctional\n */\n    //% blockId=create_animation\n    //% block=\"interval$frameInterval=timePicker animates:$frames1=animation_editor|| $frames2=animation_editor $frames3=animation_editor $frames4=animation_editor\"\n    //% inlineInputMode=inline\n    //% group=\"Animate\"\n    //% weight=100\n    //% help=github:pxt-raycasting/docs/create-animations\n    export function createAnimations(frameInterval: number, frames1: Image[], frames2?: Image[], frames3?: Image[], frames4?: Image[]): Animations {\n        const animationList = [frames1]\n        if (frames2) animationList.push(frames2)\n        if (frames3) animationList.push(frames3)\n        if (frames4) animationList.push(frames4)\n        return new Animations(frameInterval, animationList)\n    }\n\n    /**\n     * Get the Render\n     * @param img the image\n     */\n    //% group=\"Instance\"\n    //% blockId=rcRender_getRCRenderInstance block=\"raycasting render\"\n    //% expandableArgumentMode=toggle\n    //% weight=100 \n    //% blockHidden=true\n    //% hidden=1\n    export function getRCRenderInstance(): RayCastingRender {\n        return raycastingRender\n    }\n\n    /**\n     * Get the render Sprite, which create automatically, for physical collisions, and holding the view point.\n     * You can consider it as \"myself\", and operate it like a usual sprite, eg.: position, speed, scale, collision, ...\n     * But properties relative 3D, eg. ZOffset, ZPosition, viewAngle, and etc. are not in the Sprite class.\n     */\n    //% group=\"Instance\"\n    //% blockId=rcRender_getRenderSpriteVariable block=\"myself sprite\"\n    //% expandableArgumentMode=toggle\n    //% blockSetVariable=mySprite\n    //% weight=99\n    //% help=github:pxt-raycasting/get-render-sprite-variable\n    export function getRenderSpriteVariable(): Sprite {\n        return raycastingRender.sprSelf\n    }\n\n    /**\n     * Get the render Sprite, which create automatically, for physical collisions, and holding the view point.(but get/set view direction with dirX/dirY, which not in the Sprite class) \n     * You can consider it as \"myself\", and operate it like a usual sprite.\n     * eg: position, speed, scale, collision, ...\n     */\n    //% group=\"Instance\"\n    //% blockId=rcRender_getRenderSpriteInstance block=\"myself sprite\"\n    //% expandableArgumentMode=toggle\n    //% weight=98\n    //% help=github:pxt-raycasting/docs/get-render-sprite-instance\n    export function getRenderSpriteInstance(): Sprite {\n        return raycastingRender.sprSelf\n    }\n\n    /**\n     * Toggle current view mode\n     */\n    //% blockId=rcRender_toggleViewMode block=\"toggle current view mode\"\n    //% group=\"Basic\"\n    //% weight=89\n    //% help=github:pxt-raycasting/docs/toggle-view-mode\n    export function toggleViewMode() {\n        raycastingRender.viewMode = raycastingRender.viewMode == ViewMode.tilemapView ? ViewMode.raycastingView : ViewMode.tilemapView\n    }\n\n    /**\n     * Current view mode is the specific one?\n     * @param viewMode\n     */\n    //% blockId=rcRender_isViewMode block=\"current is $viewMode\"\n    //% group=\"Basic\"\n    //% weight=88\n    //% help=github:pxt-raycasting/docs/is-view-mode\n    export function isViewMode(viewMode: ViewMode): boolean {\n        return viewMode == raycastingRender.viewMode\n    }\n\n    /**\n     * Set view mode\n     * @param viewMode\n     */\n    //% blockId=rcRender_setViewMode block=\"set view mode $viewMode\"\n    //% group=\"Basic\"\n    //% weight=87\n    //% help=github:pxt-raycasting/docs/set-view-mode\n    export function setViewMode(viewMode: ViewMode) {\n        raycastingRender.viewMode = viewMode\n    }\n\n    /**\n     * Get render arribute\n     * @param viewMode\n     */\n    //% group=\"Basic\"\n    //% block=\"get %attribute\" \n    //% blockId=rcRender_getAttribute\n    //% weight=83\n    //% help=github:pxt-raycasting/docs/get-attribute\n    export function getAttribute(attr: attribute): number {\n        switch (attr) {\n            case attribute.dirX:\n                return raycastingRender.dirX\n            case attribute.dirY:\n                return raycastingRender.dirY\n            case attribute.fov:\n                return raycastingRender.fov\n            case attribute.wallZScale:\n                return raycastingRender.wallZScale\n            default:\n                return 0\n        }\n    }\n\n    /**\n     * Set render arribute\n     * @param viewMode\n     */\n    //% group=\"Basic\"\n    //% block=\"set %attribute = %value\" \n    //% blockId=rcRender_setAttribute\n    //% weight=82\n    //% help=github:pxt-raycasting/docs/set-attribute\n    export function setAttribute(attr: attribute, value: number) {\n        switch (attr) {\n            case attribute.dirX:\n                raycastingRender.dirX = value\n                break\n            case attribute.dirY:\n                raycastingRender.dirY = value\n                break\n            case attribute.fov:\n                if (value < 0) value = 0\n                raycastingRender.fov = value\n                break\n            case attribute.wallZScale:\n                if (value < 0) value = 0\n                raycastingRender.wallZScale = value\n                break\n            default:\n        }\n    }\n\n    /**\n     * Get default FOV (field of view) value\n     * @param viewMode\n     */\n    //% group=\"Basic\"\n    //% block=\"defaultFov\"\n    //% blockId=rcRender_getDefaultFov\n    //% weight=81\n    //% help=github:pxt-raycasting/docs/get-default-fov\n    export function getDefaultFov(): number {\n        return defaultFov\n    }\n\n    /**\n     * Set view angle\n     * @param angle, unit: degree 0~360\n     */\n    //% blockId=rcRender_setViewAngleInDegree block=\"set view angle$angle\"\n    //% angle.min=0 angle.max=360 angle.defl=90\n    //% group=\"Basic\"\n    //% weight=80\n    //% help=github:pxt-raycasting/docs/set-view-angle-in-degree\n    export function setViewAngleInDegree(angle: number) {\n        raycastingRender.viewAngle = angle * Math.PI / 180\n    }\n\n    /**\n     * Set view angle by dirX and dirY\n     * @param dirX\n     * @param dirY\n     */\n    //% blockId=rcRender_setViewAngle block=\"set view angle by dirX%dirX and dirY%dirY\"\n    //% group=\"Basic\"\n    //% weight=79\n    //% help=github:pxt-raycasting/docs/set-view-angle\n    export function setViewAngle(dirX: number, dirY: number) {\n        raycastingRender.viewAngle = Math.atan2(dirY, dirX)\n    }\n\n    /**\n     * Set floating offset height for a sprite at Z direction\n     * @param sprite\n     * @param Zoffset Negative floats down, affirmative goes up\n     * @param duration moving time, 0 for immediately, unit: ms\n     */\n    //% blockId=rcRender_setZOffset block=\"set Sprite %spr=variables_get(mySprite) floating %offset pixels|| duration $duration=timePicker|ms \"\n    //% offset.min=-100 offset.max=100 offset.defl=8\n    //% duration.min=0 duration.max=5000 duration.defl=0\n    //% group=\"Dimension Z\"\n    //% weight=80\n    //% help=github:pxt-raycasting/docs/set-z-offset\n    export function setZOffset(sprite: Sprite, offset: number, duration?: number) {\n        raycastingRender.setZOffset(sprite, offset, duration)\n    }\n\n    /**\n     * Check if 2 sprites overlaps each another in Z dimension\n     * Best work together with sprites.onOverlap(kind1, kind2)\n     * @param sprite1\n     * @param sprite2\n     */\n    //% blockId=rcRender_isSpritesOverlapZ\n    //% block=\"is sprites $sprite1=variables_get(mySprite) and $sprite2=variables_get(mySprite2) overlaps in Z dimension\"\n    //% group=\"Dimension Z\"\n    //% weight=78\n    //% help=github:pxt-raycasting/docs/is-sprites-overlap-z\n    export function isSpritesOverlapZ(sprite1: Sprite, sprite2: Sprite): boolean {\n        return raycastingRender.isOverlapZ(sprite1, sprite2)\n    }\n\n    /**\n     * Make sprite jump, with specific height and duration\n     * Jump can only happened when sprite is standing, current height = its offset .\n     * @param sprite\n     * @param height jump height in pixel\n     * @param duration hover time span, unit: ms\n     */\n    //% blockId=rcRender_jumpWithHeightAndDuration block=\"Sprite %spr=variables_get(mySprite) jump, with height $height duration $duration=timePicker|ms \"\n    //% height.min=0 height.max=100 height.defl=16\n    //% duration.min=50 duration.max=5000 duration.defl=500\n    //% group=\"Dimension Z\"\n    //% weight=70\n    //% help=github:pxt-raycasting/docs/jump-with-height-and-duration\n    export function jumpWithHeightAndDuration(sprite: Sprite, height: number, duration: number) {\n        raycastingRender.jumpWithHeightAndDuration(sprite, height, duration)\n    }\n\n    /**\n     * Make sprite jump, with specific speed and acceleration\n     * Simular with Move block, but jump can only happened when sprite is standing, current height = its offset.\n     * @param sprite\n     * @param v vetical speed, unit: pixel/s\n     * @param a vetical acceleration, unit: pixel/sÂ²\n     */\n    //% blockId=rcRender_jump block=\"Sprite %spr=variables_get(mySprite) jump||, with speed $v=spriteSpeedPicker acceleration $a\"\n    //% v.min=-100 v.max=100 v.defl=60\n    //% a.min=-1000 a.max=1000 a.defl=-250\n    //% group=\"Dimension Z\"\n    //% weight=68\n    //% help=github:pxt-raycasting/docs/jump\n    export function jump(sprite: Sprite, v?: number, a?: number) {\n        raycastingRender.jump(sprite, v, a)\n    }\n\n    /**\n     * Make sprite jump, with specific speed and acceleration\n     * @param sprite\n     * @param v vetical speed, unit: pixel/s\n     * @param a vetical acceleration, unit: pixel/sÂ²\n     */\n    //% blockId=rcRender_move block=\"Sprite %spr=variables_get(mySprite) move, with speed $v=spriteSpeedPicker|| acceleration $a\"\n    //% v.min=-200 v.max=200 v.defl=60\n    //% a.min=-1000 a.max=1000 a.defl=-250\n    //% group=\"Dimension Z\"\n    //% weight=66\n    //% help=github:pxt-raycasting/docs/move\n    export function move(sprite: Sprite, v?: number, a?: number) {\n        raycastingRender.move(sprite, v, a)\n    }\n\n    /**\n     * Control the self sprite using the direction buttons from the controller. \n     * To stop controlling self sprite, pass 0 for v and va.\n     *\n     * @param v The velocity used for forward/backword movement when up/down is pressed, in pixel/s\n     * @param va The angle velocity used for turn view direction when left/right is pressed, in radian/s.\n     */\n    //% blockId=\"rcRender_moveWithController\" block=\"move with buttons velocity $v|| turn speed $va\"\n    //% weight=60\n    //% expandableArgumentMode=\"toggle\"\n    //% v.defl=2 va.defl=3\n    //% group=\"Advanced\"\n    //% v.shadow=\"spriteSpeedPicker\"\n    //% va.shadow=\"spriteSpeedPicker\"\n    //% help=github:pxt-raycasting/docs/move-with-controller\n    export function moveWithController(v: number = 2, va: number = 3) {\n        raycastingRender.velocity = v\n        raycastingRender.velocityAngle = va\n    }\n\n    /**\n     * Render takeover all sprites in current scene\n     * Render will call this automatically, but maybe not in time enough.\n     * If you saw sprite draw at its tilemap position on screen, call this just after created the sprite.\n     */\n    //% blockId=rcRender_takeoverSceneSprites \n    //% block=\"takeover sprites in scene\"\n    //% group=\"Advanced\"\n    //% weight=49\n    //% help=github:pxt-raycasting/docs/takeover-scene-sprites\n    export function takeoverSceneSprites() {\n        raycastingRender.takeoverSceneSprites()\n    }\n\n    /**\n     * Run on sprite dirction updated, present view point to Sprite facing dirction, or which angle you see of the sprite.\n     * Just using with other animation extensions, to set proper Image for sprite.\n     * Not required, if you have used the set animations block provided.\n     * @param dir It is a float number, 0~1 corresponds to 0~360Â°, suggest use Math.round(dir*dirAniTotalCount)%dirAniTotalCount to get index of direction\n     */\n    //% blockId=rcRender_registerOnSpriteDirectionUpdateHandler\n    //% block=\"run code when sprite $spr dirction updated to $dir\"\n    //% draggableParameters\n    //% group=\"Advanced\"\n    //% weight=48\n    //% help=github:pxt-raycasting/docs/register-on-sprite-direction-update-handler\n    export function registerOnSpriteDirectionUpdateHandler(handler: (spr: Sprite, dir: number) => void) {\n        raycastingRender.registerOnSpriteDirectionUpdate(handler)\n    }\n}","render_raycasting.ts":"enum ViewMode {\n    //% block=\"TileMap Mode\"\n    tilemapView,\n    //% block=\"Raycasting Mode\"\n    raycastingView,\n}\n\nnamespace Render {\n    const SH = screen.height, SHHalf = SH / 2\n    const SW = screen.width, SWHalf = SW / 2\n    const fpx = 8\n    const fpx_scale = 2 ** fpx\n    function tofpx(n: number) { return (n * fpx_scale) | 0 }\n\n    class MotionSet1D {\n        p: number\n        v: number = 0\n        a: number = 0\n        constructor(public offset: number) {\n            this.p = offset\n        }\n    }\n\n    export const defaultFov = screen.width / screen.height / 2  //Wall just fill screen height when standing 1 tile away\n\n    export class RayCastingRender {\n        velocityAngle: number = 2\n        velocity: number = 3\n        protected _viewMode=ViewMode.raycastingView\n        protected dirXFpx: number\n        protected dirYFpx: number\n        protected planeX: number\n        protected planeY: number\n        protected _angle: number\n        protected _fov: number\n        protected _wallZScale: number = 1\n\n        //sprites & accessories\n        sprSelf: Sprite\n        sprites: Sprite[] = []\n        spriteAnimations: Animations[] = []\n        protected spriteMotionZ: MotionSet1D[] = []\n        protected sayRederers: sprites.BaseSpriteSayRenderer[] = []\n        protected sayEndTimes: number[] = []\n\n        //reference\n        protected tilemapScaleSize = 1 << TileScale.Sixteen\n        map: tiles.TileMapData\n        bg: Image\n        textures: Image[]\n        protected oldRender: scene.Renderable\n        protected myRender: scene.Renderable\n\n        //render\n        protected wallHeightInView: number\n        protected wallWidthInView: number\n        protected dist: number[] = []\n        //for drawing sprites\n        protected invDet: number //required for correct matrix multiplication\n        camera: scene.Camera\n        tempScreen: Image = image.create(screen.width, screen.height)\n        tempSprite: Sprite = sprites.create(img`0`)\n        protected transformX: number[] = []\n        protected transformY: number[] = []\n        protected angleSelfToSpr: number[] = []\n\n        onSpriteDirectionUpdateHandler: (spr: Sprite, dir: number) => void\n\n        get xFpx(): number {\n            return Fx.add(this.sprSelf._x, Fx.div(this.sprSelf._width, Fx.twoFx8)) as any as number / this.tilemapScaleSize\n        }\n\n        set xFpx(v: number) {\n            this.sprSelf._x = v * this.tilemapScaleSize as any as Fx8\n        }\n\n        get yFpx(): number {\n            return Fx.add(this.sprSelf._y, Fx.div(this.sprSelf._height, Fx.twoFx8)) as any as number / this.tilemapScaleSize\n        }\n\n        set yFpx(v: number) {\n            this.sprSelf._y = v * this.tilemapScaleSize as any as Fx8\n        }\n\n        get dirX(): number {\n            return this.dirXFpx / fpx_scale\n        }\n\n        get dirY(): number {\n            return this.dirYFpx / fpx_scale\n        }\n\n        set dirX(v: number) {\n            this.dirXFpx = v * fpx_scale\n        }\n\n        set dirY(v: number) {\n            this.dirYFpx = v * fpx_scale\n        }\n\n        sprXFx8(spr: Sprite) {\n            return Fx.add(spr._x, Fx.div(spr._width, Fx.twoFx8)) as any as number / this.tilemapScaleSize\n        }\n\n        sprYFx8(spr: Sprite) {\n            return Fx.add(spr._y, Fx.div(spr._height, Fx.twoFx8)) as any as number / this.tilemapScaleSize\n        }\n\n        get fov(): number {\n            return this._fov\n        }\n\n        set fov(fov: number) {\n            this._fov = fov\n            this.wallHeightInView = (screen.width << (fpx - 1)) / this._fov\n            this.wallWidthInView = this.wallHeightInView >> fpx // not fpx  // wallSize / this.fov * 4 / 3 * 2\n\n            this.setVectors()\n        }\n\n        get viewAngle(): number {\n            return this._angle\n        }\n        set viewAngle(angle: number) {\n            this._angle = angle\n            this.setVectors()\n            this.updateSelfImage()\n        }\n\n        get wallZScale(): number {\n            return this._wallZScale\n        }\n        set wallZScale(v: number) {\n            this._wallZScale = v\n        }\n\n        getMotionZ(spr: Sprite, offsetZ: number = 0) {\n            let motionZ = this.spriteMotionZ[spr.id]\n            if (!motionZ) {\n                motionZ = new MotionSet1D(tofpx(offsetZ))\n                this.spriteMotionZ[spr.id] = motionZ\n            }\n            return motionZ\n        }\n\n        getZOffset(spr: Sprite) {\n            return this.getMotionZ(spr).offset / fpx_scale\n        }\n\n        setZOffset(spr: Sprite, offsetZ: number, duration: number = 500) {\n            const motionZ = this.getMotionZ(spr, offsetZ)\n\n            motionZ.offset = tofpx(offsetZ)\n            if (motionZ.p != motionZ.offset) {\n                if (duration === 0)\n                    motionZ.p = motionZ.offset\n                else if(motionZ.v==0)\n                    this.move(spr, (motionZ.offset - motionZ.p) / fpx_scale * 1000 / duration, 0)\n            }\n        }\n\n        getMotionZPosition(spr: Sprite) {\n            return this.getMotionZ(spr).p / fpx_scale\n        }\n\n        //todo, use ZHeight(set from sprite.Height when takeover, then sprite.Height will be replace with width)\n        isOverlapZ(sprite1: Sprite, sprite2: Sprite): boolean {\n            const p1 = this.getMotionZPosition(sprite1)\n            const p2 = this.getMotionZPosition(sprite2)\n            if (p1 < p2) {\n                if (p1 + sprite1.height > p2) return true\n            } else {\n                if (p2 + sprite2.height > p1) return true\n            }\n            return false\n        }\n\n        move(spr: Sprite, v: number, a: number) {\n            const motionZ = this.getMotionZ(spr)\n\n            motionZ.v = tofpx(v)\n            motionZ.a = tofpx(a)\n        }\n\n        jump(spr: Sprite, v: number, a: number) {\n            const motionZ = this.getMotionZ(spr)\n            if (motionZ.p != motionZ.offset)\n                return\n\n            motionZ.v = tofpx(v)\n            motionZ.a = tofpx(a)\n        }\n\n        jumpWithHeightAndDuration(spr: Sprite, height: number, duration: number) {\n            const motionZ = this.getMotionZ(spr)\n            if (motionZ.p != motionZ.offset)\n                return\n\n            // height= -v*v/a/2\n            // duration = -v/a*2 *1000\n            const v = height * 4000 / duration\n            const a = -v * 2000 / duration\n            motionZ.v = tofpx(v)\n            motionZ.a = tofpx(a)\n        }\n\n        get viewMode(): ViewMode {\n            return this._viewMode\n        }\n\n        set viewMode(v: ViewMode) {\n            this._viewMode = v\n            // const sc = game.currentScene()\n            // if (v == ViewMode.tilemapView) {\n            // game.currentScene().allSprites.removeElement(this.myRender)\n            // sc.allSprites.push(this.oldRender)\n            // this.bg = game.currentScene().background.image\n            // scene.setBackgroundImage(img`15`) //todo, add bgTilemap property for tilemap mode\n            // this.sprites.forEach(spr => {\n            //     sc.allSprites.push(spr)\n            // })\n            // } else {\n            // game.currentScene().allSprites.removeElement(this.oldRender)\n            // game.currentScene().allSprites.push(this.myRender)\n            // game.currentScene().background.image = this.bg\n            // this.takeoverSceneSprites()\n            // }\n\n        }\n\n        takeoverSceneSprites() {\n            const sc_allSprites = game.currentScene().allSprites\n            for (let i=0;i<sc_allSprites.length;) {\n                const spr=sc_allSprites[i]\n                if (spr instanceof Sprite) {\n                    if (this.sprites.indexOf(spr) < 0) {\n                        this.sprites.push(spr as Sprite)\n                        if (!this.spriteMotionZ[spr.id])\n                            this.setZOffset(spr, 0)\n                        sc_allSprites.removeElement(spr)\n                        spr.onDestroyed(() => {\n                            this.sprites.removeElement(spr as Sprite)\n                            const sayRenderer = this.sayRederers[spr.id]\n                            if (sayRenderer) {\n                                this.sayRederers.removeElement(sayRenderer)\n                                sayRenderer.destroy()\n                            }\n                        })\n                    }\n                }else{ //if not remove; next\n                    i++\n                }\n            }\n            this.sprites.forEach((spr) => {\n                if (spr)\n                    this.takeoverSayRenderOfSprite(spr)\n            })\n        }\n        takeoverSayRenderOfSprite(sprite: Sprite) {\n            const sprite_as_any = (sprite as any)\n            if (sprite_as_any.sayRenderer) {\n                this.sayRederers[sprite.id] = sprite_as_any.sayRenderer\n                this.sayEndTimes[sprite.id] = sprite_as_any.sayEndTime;\n                sprite_as_any.sayRenderer = undefined\n                sprite_as_any.sayEndTime = undefined\n            }\n        }\n\n        tilemapLoaded() {\n            const sc = game.currentScene()\n            this.map = sc.tileMap.data\n            this.textures = sc.tileMap.data.getTileset()\n            this.tilemapScaleSize = 1 << sc.tileMap.data.scale\n            this.oldRender = sc.tileMap.renderable\n            sc.allSprites.removeElement(this.oldRender)\n            this.takeoverSceneSprites()\n\n            let frameCallback_update = sc.eventContext.registerFrameHandler(scene.PRE_RENDER_UPDATE_PRIORITY + 1, () => {\n                const dt = sc.eventContext.deltaTime;\n                // sc.camera.update();  // already did in scene\n                for (const s of this.sprites)\n                    s.__update(sc.camera, dt);\n            })\n\n            let frameCallback_draw = sc.eventContext.registerFrameHandler(scene.RENDER_SPRITES_PRIORITY + 1, () => {\n                screen.drawImage(sc.background.image, 0, 0)\n                if (this._viewMode == ViewMode.tilemapView) {\n                    this.oldRender.__drawCore(sc.camera)\n                    this.sprites.forEach(spr => spr.__draw(sc.camera))\n                    //draw hud, todo, walk around for being covered by tilemap\n                    sc.allSprites.forEach(spr => spr.__draw(sc.camera))\n                } else {\n                    this.takeoverSceneSprites() // in case some one new\n                    this.render()\n                    //draw hud, or other SpriteLike\n                    this.sprites.forEach(spr => {\n                        if ((spr.flags & sprites.Flag.RelativeToCamera))\n                            spr.__draw(sc.camera)\n                    })\n                    //todo, delete ?\n                    sc.allSprites.forEach(spr => spr.__draw(sc.camera))\n                }\n            })\n\n            sc.tileMap.addEventListener(tiles.TileMapEvent.Unloaded, data => {\n                sc.eventContext.unregisterFrameHandler(frameCallback_update)\n                sc.eventContext.unregisterFrameHandler(frameCallback_draw)\n            })\n\n            // this.myRender = scene.createRenderable(\n            //     scene.TILE_MAP_Z,\n            //     (t, c) => this.trace(t, c)\n            // )\n\n        }\n\n        constructor() {\n            this._angle = 0\n            this.fov = defaultFov\n            this.camera = new scene.Camera()\n\n            const sc = game.currentScene()\n            if (!sc.tileMap) {\n                sc.tileMap = new tiles.TileMap();\n            } else {\n                this.tilemapLoaded()\n            }\n            game.currentScene().tileMap.addEventListener(tiles.TileMapEvent.Loaded, data => this.tilemapLoaded())\n\n            //self sprite\n            this.sprSelf = sprites.create(image.create(this.tilemapScaleSize >> 1, this.tilemapScaleSize >> 1), SpriteKind.Player)\n            scene.cameraFollowSprite(this.sprSelf)\n            this.updateSelfImage()\n\n            game.onUpdate(function () {\n                this.updateControls()\n            })\n        }\n\n        private setVectors() {\n            const sin = Math.sin(this._angle)\n            const cos = Math.cos(this._angle)\n            this.dirXFpx = tofpx(cos)\n            this.dirYFpx = tofpx(sin)\n            this.planeX = tofpx(sin * this._fov)\n            this.planeY = tofpx(cos * -this._fov)\n        }\n\n        //todo, pre-drawn dirctional image\n        public updateSelfImage() {\n            const img = this.sprSelf.image\n            img.fill(6)\n            const arrowLength = img.width / 2\n            img.drawLine(arrowLength, arrowLength, arrowLength + this.dirX * arrowLength, arrowLength + this.dirY * arrowLength, 2)\n            img.fillRect(arrowLength - 1, arrowLength - 1, 2, 2, 2)\n        }\n\n        updateControls() {\n            if (this.velocityAngle !== 0) {\n                const dx = controller.dx(this.velocityAngle)\n                if (dx) {\n                    this.viewAngle += dx\n                }\n            }\n            if (this.velocity !== 0) {\n                const dy = controller.dy(this.velocity)\n                if (dy) {\n                    const nx = this.xFpx - Math.round(this.dirXFpx * dy)\n                    const ny = this.yFpx - Math.round(this.dirYFpx * dy)\n                    this.sprSelf.setPosition((nx * this.tilemapScaleSize / fpx_scale), (ny * this.tilemapScaleSize / fpx_scale))\n                }\n            }\n\n            const dt = game.eventContext().deltaTime\n            for (const spr of this.sprites) {\n                const motionZ = this.spriteMotionZ[spr.id]\n                if (!motionZ) continue\n\n                if (motionZ.v != 0 || motionZ.p != motionZ.offset) {\n                    motionZ.v += motionZ.a * dt, motionZ.p += motionZ.v * dt\n                    //landing\n                    if ((motionZ.a >= 0 && motionZ.v > 0 && motionZ.p > motionZ.offset) ||\n                        (motionZ.a <= 0 && motionZ.v < 0 && motionZ.p < motionZ.offset)) { motionZ.p = motionZ.offset, motionZ.v = 0 }\n                }\n            }\n        }\n\n        render() {\n            // based on https://lodev.org/cgtutor/raycasting.html\n            const w = screen.width\n            const h = screen.height\n            const one = 1 << fpx\n            const one2 = 1 << (fpx + fpx)\n\n            //for sprite\n            this.invDet = one2 / (this.planeX * this.dirYFpx - this.dirXFpx * this.planeY); //required for correct matrix multiplication\n\n            let drawStart = 0\n            let drawHeight = 0\n            let lastDist = -1, lastTexX = -1, lastMapX = -1, lastMapY = -1\n            const ViewZPos = this.spriteMotionZ[this.sprSelf.id].p + (this.sprSelf._height as any as number) - (2 << fpx)\n            let cameraRangeAngle = Math.atan(this.fov)+.1 //tolerance for spr center just out of camera\n            //debug\n            // const ms=control.millis()\n            for (let x = 0; x < w; x++) {\n                const cameraX: number = one - Math.idiv((x << fpx) << 1, w)\n                let rayDirX = this.dirXFpx + (this.planeX * cameraX >> fpx)\n                let rayDirY = this.dirYFpx + (this.planeY * cameraX >> fpx)\n\n                // avoid division by zero\n                if (rayDirX == 0) rayDirX = 1\n                if (rayDirY == 0) rayDirY = 1\n\n                let mapX = this.xFpx >> fpx\n                let mapY = this.yFpx >> fpx\n\n                // length of ray from current position to next x or y-side\n                let sideDistX = 0, sideDistY = 0\n\n                // length of ray from one x or y-side to next x or y-side\n                const deltaDistX = Math.abs(Math.idiv(one2, rayDirX));\n                const deltaDistY = Math.abs(Math.idiv(one2, rayDirY));\n\n                let mapStepX = 0, mapStepY = 0\n\n                let sideWallHit = false;\n\n                //calculate step and initial sideDist\n                if (rayDirX < 0) {\n                    mapStepX = -1;\n                    sideDistX = ((this.xFpx - (mapX << fpx)) * deltaDistX) >> fpx;\n                } else {\n                    mapStepX = 1;\n                    sideDistX = (((mapX << fpx) + one - this.xFpx) * deltaDistX) >> fpx;\n                }\n                if (rayDirY < 0) {\n                    mapStepY = -1;\n                    sideDistY = ((this.yFpx - (mapY << fpx)) * deltaDistY) >> fpx;\n                } else {\n                    mapStepY = 1;\n                    sideDistY = (((mapY << fpx) + one - this.yFpx) * deltaDistY) >> fpx;\n                }\n\n                let color = 0\n\n                while (true) {\n                    //jump to next map square, OR in x-direction, OR in y-direction\n                    if (sideDistX < sideDistY) {\n                        sideDistX += deltaDistX;\n                        mapX += mapStepX;\n                        sideWallHit = false;\n                    } else {\n                        sideDistY += deltaDistY;\n                        mapY += mapStepY;\n                        sideWallHit = true;\n                    }\n\n                    if (this.map.isOutsideMap(mapX, mapY))\n                        break\n                    color = this.map.getTile(mapX, mapY)\n                    if (color)\n                        break; // hit!\n                }\n\n                if (this.map.isOutsideMap(mapX, mapY))\n                    continue\n\n                let perpWallDist = 0\n                let wallX = 0\n                if (!sideWallHit) {\n                    perpWallDist = Math.idiv(((mapX << fpx) - this.xFpx + (1 - mapStepX << fpx - 1)) << fpx, rayDirX)\n                    wallX = this.yFpx + (perpWallDist * rayDirY >> fpx);\n                } else {\n                    perpWallDist = Math.idiv(((mapY << fpx) - this.yFpx + (1 - mapStepY << fpx - 1)) << fpx, rayDirY)\n                    wallX = this.xFpx + (perpWallDist * rayDirX >> fpx);\n                }\n                wallX &= (1 << fpx) - 1\n\n                // color = (color - 1) * 2\n                // if (sideWallHit) color++\n\n                const tex = this.textures[color]\n                if (!tex)\n                    continue\n\n                let texX = (wallX * tex.width) >> fpx;\n                // if ((!sideWallHit && rayDirX > 0) || (sideWallHit && rayDirY < 0))\n                //     texX = tex.width - texX - 1;\n\n                if (perpWallDist !== lastDist && (texX !== lastTexX || mapX !== lastMapX || mapY !== lastMapY)) {//neighbor line of tex share same parameters\n                    const lineHeight = (this.wallHeightInView / perpWallDist)\n                    const drawEnd = lineHeight * ViewZPos / this.tilemapScaleSize / fpx_scale;\n                    drawStart = drawEnd - lineHeight * (this._wallZScale) + 1;\n                    drawHeight = (Math.ceil(drawEnd) - Math.ceil(drawStart) + 1)\n                    drawStart += (h >> 1) \n                    \n                    lastDist = perpWallDist\n                    lastTexX = texX\n                    lastMapX = mapX\n                    lastMapY = mapY\n                }\n                //fix start&end points to avoid regmatic between lines\n                screen.blitRow(x, drawStart, tex, texX, drawHeight)\n\n                this.dist[x] = perpWallDist\n            }\n            //debug\n            // info.setScore(control.millis()-ms)\n            // screen.print(lastPerpWallDist.toString(), 0,0,7 )\n\n            //debug\n            // let msSprs=control.millis()\n            /////////////////// sprites ///////////////////\n            this.sprites\n                .filter((spr, i) => { // transformY>0\n                    if (!(spr instanceof Sprite) || spr == this.sprSelf || (spr.flags & sprites.Flag.RelativeToCamera))\n                        return false\n                    const spriteX = this.sprXFx8(spr) - this.xFpx\n                    const spriteY = this.sprYFx8(spr) - this.yFpx\n                    this.angleSelfToSpr[spr.id] = Math.atan2(spriteX, spriteY)\n                    this.transformX[spr.id] = this.invDet * (this.dirYFpx * spriteX - this.dirXFpx * spriteY) >> fpx;\n                    this.transformY[spr.id] = this.invDet * (-this.planeY * spriteX + this.planeX * spriteY) >> fpx; //this is actually the depth inside the screen, that what Z is in 3D\n                    const angleInCamera= Math.atan2(this.transformX[spr.id]*this.fov, this.transformY[spr.id])\n                    return angleInCamera > -cameraRangeAngle && angleInCamera < cameraRangeAngle //(this.transformY[spr.id] > 0\n                }).sort((spr1, spr2) => {   // far to near\n                    return (this.transformY[spr2.id] - this.transformY[spr1.id])\n                }).forEach((spr, index) => {\n                    //debug\n                    // screen.print([spr.id,Math.roundWithPrecision(angle[spr.id],3)].join(), 0, index * 10 + 10,9)\n                    this.drawSprite(spr, index, ViewZPos, this.transformX[spr.id], this.transformY[spr.id], this.angleSelfToSpr[spr.id])\n                })\n\n            //debug\n            // info.setLife(control.millis() - msSprs+1)\n            // screen.print([Math.roundWithPrecision(angle0,3)].join(), 20,  0)\n\n        }\n\n        registerOnSpriteDirectionUpdate(handler: (spr: Sprite, dir: number) => void) {\n            this.onSpriteDirectionUpdateHandler = handler\n        }\n        drawSprite(spr: Sprite, index: number, ViewZPos: number, transformX: number, transformY: number, myAngle:number) {\n            const spriteScreenX = Math.ceil((screen.width / 2) * (1 - transformX / transformY));\n            const spriteScreenHalfWidth = Math.idiv((spr._width as any as number) / this.tilemapScaleSize / 2 * this.wallWidthInView, transformY)  //origin: (texSpr.width / 2 << fpx) / transformY / this.fov / 3 * 2 * 4\n\n            //calculate drawing range in X direction\n            //assume there is one range only\n            let blitX = 0, blitWidth = 0\n            for (let sprX = 0; sprX < screen.width; sprX++) {\n                if (this.dist[sprX] > transformY) {\n                    if (blitWidth == 0)\n                        blitX = sprX\n                    blitWidth++\n                } else if (blitWidth > 0) {\n                    if (blitX <= spriteScreenX + spriteScreenHalfWidth && blitX + blitWidth >= spriteScreenX - spriteScreenHalfWidth)\n                        break\n                    else\n                        blitX = 0, blitWidth = 0;\n                }\n            }\n            // screen.print([this.getxFx8(spr), this.getyFx8(spr)].join(), 0,index*10+10)\n            const blitXSpr = Math.max(blitX, spriteScreenX - spriteScreenHalfWidth)\n            const blitWidthSpr = Math.min(blitX + blitWidth, spriteScreenX + spriteScreenHalfWidth) - blitXSpr\n            if (blitWidthSpr <= 0)\n                return\n\n            const lineHeight = Math.idiv(this.wallHeightInView, transformY)\n            const drawStart = (screen.height >> 1) + (lineHeight * ((ViewZPos - this.spriteMotionZ[spr.id].p - (spr._height as any as number)) / this.tilemapScaleSize) >> fpx)\n\n            //for textures=image[][], abandoned\n            //    const texSpr = spr.getTexture(Math.floor(((Math.atan2(spr.vxFx8, spr.vyFx8) - myAngle) / Math.PI / 2 + 2-.25) * spr.textures.length +.5) % spr.textures.length)\n            //for deal in user code\n            if (this.onSpriteDirectionUpdateHandler)\n                this.onSpriteDirectionUpdateHandler(spr, ((Math.atan2(spr._vx as any as number, spr._vy as any as number) - myAngle) / Math.PI / 2 + 2 - .25))\n            //for CharacterAnimation ext.\n            //     const iTexture = Math.floor(((Math.atan2(spr._vx as any as number, spr._vy as any as number) - myAngle) / Math.PI / 2 + 2 - .25) * 4 + .5) % 4\n            //     const characterAniDirs = [Predicate.MovingLeft,Predicate.MovingDown, Predicate.MovingRight, Predicate.MovingUp]\n            //     character.setCharacterState(spr, character.rule(characterAniDirs[iTexture]))\n            //for this.spriteAnimations\n            const texSpr = !this.spriteAnimations[spr.id] ? spr.image : this.spriteAnimations[spr.id].getFrameByDir(((Math.atan2(spr._vx as any as number, spr._vy as any as number) - myAngle) / Math.PI / 2 + 2 - .25))\n            helpers.imageBlit(\n                screen,\n                blitXSpr,\n                drawStart,\n                blitWidthSpr,\n                lineHeight * spr.height / this.tilemapScaleSize,\n                texSpr,\n                (blitXSpr - (spriteScreenX - spriteScreenHalfWidth)) * texSpr.width / spriteScreenHalfWidth / 2\n                ,\n                0,\n                blitWidthSpr * texSpr.width / spriteScreenHalfWidth / 2, texSpr.height, true, false)\n\n            //sayText\n            const anchor = this.sayRederers[spr.id]\n            if (anchor) {\n                if (this.sayEndTimes[spr.id] && control.millis() > this.sayEndTimes[spr.id]) {\n                    this.sayRederers[spr.id] = undefined\n                } else {\n                    this.tempSprite.x = SWHalf\n                    this.tempSprite.y = SH\n                    this.camera.drawOffsetX = 0\n                    this.camera.drawOffsetY = 0\n                    this.tempScreen.fill(0)\n                    anchor.draw(this.tempScreen, this.camera, this.tempSprite)\n\n                    const height = SH * fpx_scale / transformY\n                    const blitXSaySrc = (blitX - spriteScreenX) * transformY / fpx_scale + SWHalf\n                    const blitWidthSaySrc = blitWidth * transformY / fpx_scale\n                    if (blitXSaySrc < 0) { //imageBlit considers negative value as 0\n                        helpers.imageBlit(\n                            screen,\n                            spriteScreenX - SWHalf * fpx_scale / transformY, drawStart - height, (blitWidthSaySrc + blitXSaySrc) * fpx_scale / transformY, height,\n                            this.tempScreen,\n                            0, 0, blitWidthSaySrc + blitXSaySrc, SH, true, false)\n                    } else\n                        helpers.imageBlit(\n                            screen,\n                            blitX, drawStart - height, blitWidth, height,\n                            this.tempScreen,\n                            blitXSaySrc, 0, blitWidthSaySrc, SH, true, false)\n                }\n            }\n        }\n    }\n\n    //%fixedinstance\n    export const raycastingRender = new Render.RayCastingRender()\n}\n","tilemap.g.jres":"{\n    \"transparency16\": {\n        \"data\": \"hwQQABAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true\n    },\n    \"tile1\": {\n        \"data\": \"hwQQABAAAAAhUyFTIVMhUzIVMhUyFTIVUyFTIVMhUyEVMhUyFTIVMiFTIVMhUyFTMhUyFTIVMhVTIVMhUyFTIRUyFTIVMhUyIVMhUyFTIVMyFTIVMhUyFVMhUyFTIVMhFTIVMhUyFTIhUyFTIVMhUzIVMhUyFTIVUyFTIVMhUyEVMhUyFTIVMg==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true,\n        \"displayName\": \"myTile\"\n    },\n    \"tile2\": {\n        \"data\": \"hwQQABAAAADdHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHd0d3R3dHQ==\",\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"tilemapTile\": true,\n        \"displayName\": \"myTile0\"\n    },\n    \"level1\": {\n        \"id\": \"level1\",\n        \"mimeType\": \"application/mkcd-tilemap\",\n        \"data\": \"MTAxMDAwMTAwMDAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxMDEwMDAwMDAwMjAyMDIwMDAwMDUwNTA1MDAwMDAwMDEwMTAwMDAwMDAyMDAwMDAwMDAwMDAwMDUwMDAwMDAwMTAxMDAwMDAwMDIwMDAwMDAwMDAwMDAwNTAwMDAwMDAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDAwMDAwMDMwMDAwMDAwMDAwMDAwNDAwMDAwMDAxMDEwMDAwMDAwMzAwMDAwMDAwMDAwMDA0MDAwMDAwMDEwMTAwMDAwMDAzMDMwMzAwMDAwNDA0MDQwMDAwMDAwMTAxMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAxMDEwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDEwMTAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMDAwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMDEwMTAxMjIyMjIyMjIyMjIyMjIyMjAyMDAwMDAwMDAwMDAwMjAwMjAwMDAwMDAwMDAwMDIwMDIwMDAwMDAwMDAwMDAyMDAyMDAyMjAyMjAyMjAwMjAwMjAwMDIwMDAwMjAwMDIwMDIwMDAyMDAwMDIwMDAyMDAyMDAwMDAwMDAwMDAwMjAwMjAwMDAwMDAwMDAwMDIwMDIwMDAyMDAwMDIwMDAyMDAyMDAwMjAwMDAyMDAwMjAwMjAwMjIwMjIwMjIwMDIwMDIwMDAwMDAwMDAwMDAyMDAyMDAwMDAwMDAwMDAwMjAwMjAwMDAwMDAwMDAwMDIwMjIyMjIyMjIyMjIyMjIyMg==\",\n        \"tileset\": [\n            \"myTiles.transparency16\",\n            \"myTiles.tile1\",\n            \"sprites.castle.tileGrass2\",\n            \"sprites.builtin.brick\",\n            \"sprites.dungeon.hazardLava0\",\n            \"myTiles.tile2\"\n        ],\n        \"displayName\": \"level1\"\n    },\n    \"*\": {\n        \"mimeType\": \"image/x-mkcd-f4\",\n        \"dataEncoding\": \"base64\",\n        \"namespace\": \"myTiles\"\n    }\n}","tilemap.g.ts":"// Auto-generated code. Do not edit.\nnamespace myTiles {\n    //% fixedInstance jres blockIdentity=images._tile\n    export const transparency16 = image.ofBuffer(hex``);\n    //% fixedInstance jres blockIdentity=images._tile\n    export const tile1 = image.ofBuffer(hex``);\n    //% fixedInstance jres blockIdentity=images._tile\n    export const tile2 = image.ofBuffer(hex``);\n\n    helpers._registerFactory(\"tilemap\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"level1\":\n            case \"level1\":return tiles.createTilemap(hex``, img`\n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . 2 2 2 . . 2 2 2 . . . 2 \n2 . . . 2 . . . . . . 2 . . . 2 \n2 . . . 2 . . . . . . 2 . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . 2 . . . . . . 2 . . . 2 \n2 . . . 2 . . . . . . 2 . . . 2 \n2 . . . 2 2 2 . . 2 2 2 . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 . . . . . . . . . . . . . . 2 \n2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 2 \n`, [myTiles.transparency16,myTiles.tile1,sprites.castle.tileGrass2,sprites.builtin.brick,sprites.dungeon.hazardLava0,myTiles.tile2], TileScale.Sixteen);\n        }\n        return null;\n    })\n\n    helpers._registerFactory(\"tile\", function(name: string) {\n        switch(helpers.stringTrim(name)) {\n            case \"transparency16\":return transparency16;\n            case \"myTile\":\n            case \"tile1\":return tile1;\n            case \"myTile0\":\n            case \"tile2\":return tile2;\n        }\n        return null;\n    })\n\n}\n// Auto-generated code. Do not edit.\n"}